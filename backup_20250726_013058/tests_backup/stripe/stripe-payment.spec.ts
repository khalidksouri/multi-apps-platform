import { test, expect } from '@playwright/test'

test.describe('ðŸ’³ Tests de Paiement Stripe', () => {
  
  test.beforeEach(async ({ page }) => {
    await page.goto('/stripe-test')
  })

  test('Page de test Stripe se charge', async ({ page }) => {
    await expect(page.locator('h1')).toContainText('Test des Paiements')
    await expect(page.locator('text=Mode dÃ©veloppement')).toBeVisible()
    console.log('âœ… Page Stripe chargÃ©e')
  })

  test('Cartes de test sont affichÃ©es', async ({ page }) => {
    const cards = [
      '4242 4242 4242 4242', // SuccÃ¨s
      '4000 0000 0000 0002', // DÃ©clinÃ©e
      '4000 0000 0000 9995', // Fonds insuffisants
      '4000 0000 0000 0069'  // ExpirÃ©e
    ]
    
    for (const card of cards) {
      await expect(page.locator(`text=${card}`)).toBeVisible()
      console.log(`âœ… Carte trouvÃ©e: ${card}`)
    }
  })

  test('Plans de test sont affichÃ©s', async ({ page }) => {
    await expect(page.locator('text=Plan Famille')).toBeVisible()
    await expect(page.locator('text=Plan Premium')).toBeVisible()
    await expect(page.locator('text=Plan Ã‰cole')).toBeVisible()
    console.log('âœ… Tous les plans affichÃ©s')
  })

  test('Toggle mensuel/annuel fonctionne', async ({ page }) => {
    // VÃ©rifier Ã©tat initial
    await expect(page.locator('text=â‚¬6.99')).toBeVisible()
    
    // Passer en annuel
    await page.click('button:has-text("Annuel")')
    await expect(page.locator('text=â‚¬59.90')).toBeVisible()
    
    console.log('âœ… Toggle mensuel/annuel fonctionne')
  })

  test('API de checkout rÃ©pond', async ({ page }) => {
    const response = await page.request.get('/api/stripe/create-checkout-session')
    expect(response.status()).toBe(200)
    
    const data = await response.json()
    expect(data).toHaveProperty('status', 'OK')
    
    console.log('âœ… API de checkout opÃ©rationnelle')
  })
})
