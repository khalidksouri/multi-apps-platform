import { test, expect } from '@playwright/test';

test.describe('Math4Child v4.2.0 - Validation Fonctionnelle', () => {
  test.beforeEach(async ({ page }) => {
    await page.goto('/');
  });

  test('‚úÖ √âl√©ments REQUIS pr√©sents', async ({ page }) => {
    // V√©rifications positives selon sp√©cifications MATH4CHILD
    await expect(page.locator('text=Math4Child')).toBeVisible();
    await expect(page.locator('text=v4.2.0')).toBeVisible();
    await expect(page.locator('text=support@math4child.com')).toBeVisible();
    await expect(page.locator('text=commercial@math4child.com')).toBeVisible();
    await expect(page.locator('text=LE PLUS CHOISI')).toBeVisible();
    await expect(page.locator('text=200+')).toBeVisible();
    await expect(page.locator('text=PREMI√àRE MONDIALE')).toBeVisible();
    
    console.log('‚úÖ Tous les √©l√©ments requis sont pr√©sents');
  });

  test('üåç LANGUES - Drapeaux arabes sp√©cifiques', async ({ page }) => {
    await page.click('button:has-text("Fran√ßais")');
    
    // V√©rifier drapeaux selon sp√©cifications MATH4CHILD
    await expect(page.locator('text=üá≤üá¶')).toBeVisible(); // Maroc pour Afrique
    await expect(page.locator('text=üáµüá∏')).toBeVisible(); // Palestine pour Moyen-Orient
    
    console.log('‚úÖ Drapeaux arabes conformes aux sp√©cifications');
  });

  test('üí≥ PLANS - Profils selon sp√©cifications exactes', async ({ page }) => {
    // V√©rifier les prix selon sp√©cifications MATH4CHILD
    await expect(page.locator('text=‚Ç¨4.99')).toBeVisible(); // BASIC
    await expect(page.locator('text=‚Ç¨9.99')).toBeVisible(); // STANDARD  
    await expect(page.locator('text=‚Ç¨14.99')).toBeVisible(); // PREMIUM
    await expect(page.locator('text=‚Ç¨19.99')).toBeVisible(); // FAMILLE
    await expect(page.locator('text=‚Ç¨29.99')).toBeVisible(); // ULTIMATE
    
    // V√©rifier que PREMIUM est marqu√© comme le plus choisi
    const premiumPlan = page.locator('[class*="ring-4 ring-yellow-400"]');
    await expect(premiumPlan).toBeVisible();
    
    console.log('‚úÖ Plans d\'abonnement conformes aux sp√©cifications');
  });

  test('üéÆ PROGRESSION - 5 niveaux avec 100 r√©ponses min', async ({ page }) => {
    // V√©rifier les 5 niveaux selon sp√©cifications
    for (let i = 1; i <= 5; i++) {
      await expect(page.locator(`text=Niveau ${i}`)).toBeVisible();
    }
    
    // V√©rifier l'exigence des 100 r√©ponses
    await expect(page.locator('text=100 bonnes r√©ponses minimum')).toBeVisible();
    
    console.log('‚úÖ Syst√®me de progression conforme');
  });

  test('üßÆ OP√âRATIONS - 5 op√©rations math√©matiques', async ({ page }) => {
    // V√©rifier les 5 op√©rations selon sp√©cifications
    await expect(page.locator('text=Addition')).toBeVisible();
    await expect(page.locator('text=Soustraction')).toBeVisible();
    await expect(page.locator('text=Multiplication')).toBeVisible();
    await expect(page.locator('text=Division')).toBeVisible();
    await expect(page.locator('text=Mixte')).toBeVisible();
    
    console.log('‚úÖ 5 op√©rations math√©matiques pr√©sentes');
  });

  test('üöÄ INNOVATIONS - 6 fonctionnalit√©s r√©volutionnaires', async ({ page }) => {
    // V√©rifier les 6 innovations selon sp√©cifications
    await expect(page.locator('text=IA Adaptative Avanc√©e')).toBeVisible();
    await expect(page.locator('text=Reconnaissance Manuscrite')).toBeVisible();
    await expect(page.locator('text=R√©alit√© Augment√©e 3D')).toBeVisible();
    await expect(page.locator('text=Assistant Vocal IA')).toBeVisible();
    await expect(page.locator('text=Moteur d\'Exercices R√©volutionnaire')).toBeVisible();
    await expect(page.locator('text=Syst√®me Langues Universel')).toBeVisible();
    
    console.log('‚úÖ 6 innovations r√©volutionnaires pr√©sentes');
  });

  test('üí∞ R√âDUCTIONS - Syst√®me selon sp√©cifications', async ({ page }) => {
    // V√©rifier les r√©ductions selon sp√©cifications MATH4CHILD
    await expect(page.locator('text=-10%')).toBeVisible(); // Trimestriel
    await expect(page.locator('text=-30%')).toBeVisible(); // Annuel
    await expect(page.locator('text=-75%')).toBeVisible(); // Multi-plateformes
    
    console.log('‚úÖ Syst√®me de r√©ductions conforme');
  });

  test('üì± DESIGN - Interface riche et attrayante', async ({ page }) => {
    // V√©rifier le design riche selon sp√©cifications
    await expect(page.locator('[class*="gradient"]')).toBeVisible();
    await expect(page.locator('[class*="backdrop-blur"]')).toBeVisible();
    await expect(page.locator('[class*="transform"]')).toBeVisible();
    
    console.log('‚úÖ Design interactif et attrayant conforme');
  });
});
