#!/bin/bash

# =============================================================================
# üö® CORRECTION D√âPLOIEMENT STAGING - MATH4CHILD
# R√©solution du probl√®me "Site not found" pour feature/math4child
# =============================================================================

set -e

# Configuration des couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

log_header() {
    echo -e "${PURPLE}üöÄ $1${NC}"
}

main() {
    echo ""
    echo "üö® CORRECTION D√âPLOIEMENT STAGING MATH4CHILD"
    echo "============================================="
    echo ""
    
    check_current_branch
    check_netlify_config
    force_staging_deployment
    verify_build_process
    manual_deployment_check
    show_troubleshooting_steps
}

# =============================================================================
# üîç V√âRIFICATIONS INITIALES
# =============================================================================

check_current_branch() {
    log_header "V√âRIFICATION DE LA BRANCHE"
    
    CURRENT_BRANCH=$(git branch --show-current 2>/dev/null || echo "unknown")
    log_info "Branche actuelle: $CURRENT_BRANCH"
    
    if [ "$CURRENT_BRANCH" != "feature/math4child" ]; then
        log_warning "Vous n'√™tes pas sur la branche feature/math4child"
        log_info "Basculement vers la branche feature/math4child..."
        
        # V√©rifier si la branche existe
        if git show-ref --verify --quiet refs/heads/feature/math4child; then
            git checkout feature/math4child
            log_success "Bascul√© vers feature/math4child"
        else
            log_error "La branche feature/math4child n'existe pas!"
            log_info "Cr√©ation de la branche..."
            git checkout -b feature/math4child
            log_success "Branche feature/math4child cr√©√©e"
        fi
    else
        log_success "Vous √™tes sur la bonne branche"
    fi
    
    # Mettre √† jour la branche
    log_info "Mise √† jour de la branche..."
    git pull origin feature/math4child 2>/dev/null || log_warning "Impossible de pull (normal si nouvelle branche)"
}

check_netlify_config() {
    log_header "V√âRIFICATION CONFIGURATION NETLIFY"
    
    if [ -f "netlify.toml" ]; then
        log_success "netlify.toml trouv√©"
        
        # V√©rifier la configuration pour feature/math4child
        if grep -q "feature/math4child" netlify.toml; then
            log_success "Configuration feature/math4child pr√©sente"
        else
            log_warning "Configuration feature/math4child manquante"
            add_feature_branch_config
        fi
    else
        log_error "netlify.toml manquant!"
        create_complete_netlify_config
    fi
}

add_feature_branch_config() {
    log_info "Ajout de la configuration pour feature/math4child..."
    
    cat >> netlify.toml << 'EOF'

# =============================================================================
# üîß CONFIGURATION SP√âCIFIQUE POUR FEATURE/MATH4CHILD
# =============================================================================

[context."feature/math4child"]
  command = "npm install && npm run build:feature"
  
[context."feature/math4child".environment]
  NODE_ENV = "staging"
  DEFAULT_LANGUAGE = "fr"
  BRANCH_NAME = "feature/math4child"
  
  # URL de staging pour la feature branch
  NEXT_PUBLIC_SITE_URL = "$DEPLOY_PRIME_URL"
  NEXT_PUBLIC_DOMAIN = "$DEPLOY_PRIME_URL"
  
  # Identification claire de la branche feature
  NEXT_PUBLIC_APP_NAME = "Math4Child [FEATURE]"
  NEXT_PUBLIC_APP_VERSION = "4.2.0-feature"
  
  # Toutes les innovations activ√©es pour les tests
  ENABLE_AI_ADAPTIVE = "true"
  ENABLE_HANDWRITING = "true"
  ENABLE_AR_3D = "true"
  ENABLE_VOICE_AI = "true"
  ENABLE_EXERCISE_ENGINE = "true"
  ENABLE_UNIVERSAL_LANGUAGES = "true"
  
  # Features exp√©rimentales activ√©es
  ENABLE_EXPERIMENTAL_FEATURES = "true"
  ENABLE_BETA_TESTING = "true"
  DEBUG_MODE = "true"
EOF

    log_success "Configuration feature/math4child ajout√©e"
}

create_complete_netlify_config() {
    log_info "Cr√©ation de netlify.toml complet..."
    
    cat > netlify.toml << 'EOF'
[build]
  base = "."
  publish = "out"
  command = "npm install && npm run build:safe"

[build.environment]
  NODE_VERSION = "18.17.0"
  NODE_ENV = "production"
  DEFAULT_LANGUAGE = "fr"

[context.production]
  command = "npm install && npm run build"
  
[context.production.environment]
  NODE_ENV = "production"
  BRANCH_NAME = "main"
  NEXT_PUBLIC_APP_NAME = "Math4Child"
  NEXT_PUBLIC_APP_VERSION = "4.2.0"

[context."feature/math4child"]
  command = "npm install && npm run build:feature"
  
[context."feature/math4child".environment]
  NODE_ENV = "staging"
  BRANCH_NAME = "feature/math4child"
  NEXT_PUBLIC_SITE_URL = "$DEPLOY_PRIME_URL"
  NEXT_PUBLIC_APP_NAME = "Math4Child [FEATURE]"
  NEXT_PUBLIC_APP_VERSION = "4.2.0-feature"
  ENABLE_EXPERIMENTAL_FEATURES = "true"
  DEBUG_MODE = "true"

[context.branch-deploy]
  command = "npm install && npm run build:dev"
  
[context.branch-deploy.environment]
  NODE_ENV = "development"
  NEXT_PUBLIC_SITE_URL = "$DEPLOY_PRIME_URL"

[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
EOF

    log_success "netlify.toml cr√©√©"
}

# =============================================================================
# üöÄ FORCER LE D√âPLOIEMENT STAGING
# =============================================================================

force_staging_deployment() {
    log_header "FOR√áAGE DU D√âPLOIEMENT STAGING"
    
    # V√©rifier les scripts de build
    if ! grep -q "build:feature" package.json; then
        log_warning "Script build:feature manquant, ajout..."
        add_build_scripts
    fi
    
    # Nettoyer et pr√©parer
    log_info "Nettoyage des fichiers temporaires..."
    rm -rf .next out node_modules/.cache 2>/dev/null || true
    
    # Test de build local
    log_info "Test de build local..."
    if npm run build:safe 2>/dev/null || npm run build:no-lint 2>/dev/null; then
        log_success "Build local r√©ussi"
    else
        log_warning "Build local √©chou√©, continuons quand m√™me..."
    fi
    
    # Commit et push forc√©
    log_info "Commit et push des corrections..."
    git add .
    git commit -m "üîß Fix: Configuration Netlify pour staging feature/math4child" || true
    
    # Push avec force pour d√©clencher le d√©ploiement
    log_info "Push vers origin feature/math4child..."
    git push origin feature/math4child
    
    log_success "Push effectu√© - d√©ploiement en cours..."
}

add_build_scripts() {
    log_info "Ajout des scripts de build manquants..."
    
    # Utiliser Node.js pour modifier package.json
    node << 'EOF'
const fs = require('fs');
const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));

const newScripts = {
  "build:safe": "npm run build:production || npm run build:force || npm run build:no-lint",
  "build:feature": "npm run clean && npm run build:force",
  "build:force": "SKIP_LINT=true next build",
  "build:no-lint": "SKIP_LINT=true SKIP_TYPE_CHECK=true next build",
  "build:dev": "npm run build:force",
  "clean": "rm -rf .next out .turbo"
};

packageJson.scripts = {
  ...packageJson.scripts,
  ...newScripts
};

fs.writeFileSync('package.json', JSON.stringify(packageJson, null, 2));
console.log('‚úÖ Scripts de build ajout√©s');
EOF

    log_success "Scripts de build configur√©s"
}

# =============================================================================
# üîç V√âRIFICATION DU PROCESSUS DE BUILD
# =============================================================================

verify_build_process() {
    log_header "V√âRIFICATION DU PROCESSUS DE BUILD"
    
    # Attendre un peu pour que Netlify d√©marre
    log_info "Attente du d√©marrage du build Netlify (30 secondes)..."
    sleep 30
    
    log_info "V√©rifications √† effectuer manuellement :"
    echo ""
    echo "1. üåê Aller sur https://app.netlify.com/sites/prismatic-sherbet-986159/deploys"
    echo "2. üîç Chercher un deploy avec la branche 'feature/math4child'"
    echo "3. üìä V√©rifier le statut :"
    echo "   - ‚úÖ Building ‚Üí En cours"
    echo "   - ‚úÖ Published ‚Üí R√©ussi"
    echo "   - ‚ùå Failed ‚Üí √âchec (voir les logs)"
    echo ""
    echo "4. üîó L'URL de staging sera :"
    echo "   https://feature-math4child--prismatic-sherbet-986159.netlify.app"
    echo ""
}

manual_deployment_check() {
    log_header "V√âRIFICATIONS MANUELLES REQUISES"
    
    echo "üìã CHECKLIST NETLIFY :"
    echo ""
    echo "‚ñ° Dashboard Netlify ouvert"
    echo "‚ñ° Section 'Deploys' consult√©e" 
    echo "‚ñ° D√©ploiement feature/math4child visible"
    echo "‚ñ° Statut du build v√©rifi√©"
    echo "‚ñ° Logs de build consult√©s en cas d'erreur"
    echo ""
    
    echo "üîß SI LE D√âPLOIEMENT N'APPARA√éT PAS :"
    echo "1. V√©rifier que les webhooks GitHub sont actifs"
    echo "2. Aller dans Site Settings > Build & Deploy"
    echo "3. V√©rifier 'Branch deploys' est activ√©"
    echo "4. Ajouter 'feature/math4child' dans les branches √† d√©ployer"
    echo ""
}

show_troubleshooting_steps() {
    log_header "√âTAPES DE D√âPANNAGE SUPPL√âMENTAIRES"
    
    echo "üö® SI LE PROBL√àME PERSISTE :"
    echo ""
    echo "1. üîÑ D√âPLOIEMENT MANUEL :"
    echo "   - Dans Netlify > Deploys > Trigger deploy"
    echo "   - Choisir 'Deploy site'"
    echo "   - S√©lectionner la branche 'feature/math4child'"
    echo ""
    echo "2. üõ†Ô∏è CONFIGURATION BRANCHES :"
    echo "   - Site Settings > Build & Deploy > Continuous Deployment"
    echo "   - Branch deploys : All"
    echo "   - Deploy previews : Any pull request"
    echo ""
    echo "3. üîç V√âRIFIER LES VARIABLES D'ENVIRONNEMENT :"
    echo "   - Site Settings > Environment variables"
    echo "   - Ajouter si manquant :"
    echo "     NODE_ENV=staging"
    echo "     SKIP_LINT=true"
    echo ""
    echo "4. üìû URL ALTERNATIVE :"
    echo "   - Essayer : https://prismatic-sherbet-986159.netlify.app"
    echo "   - Ou regarder dans Netlify pour l'URL exacte"
    echo ""
}

# =============================================================================
# üèÅ EX√âCUTION
# =============================================================================

trap 'log_error "Script interrompu"; exit 1' ERR
main "$@"

echo ""
log_success "üéâ SCRIPT DE CORRECTION TERMIN√â"
echo ""
echo "‚è≥ PROCHAINES √âTAPES :"
echo "1. Attendre 5-10 minutes pour le build Netlify"
echo "2. V√©rifier le dashboard Netlify"
echo "3. Tester l'URL de staging une fois le build termin√©"
echo "4. Si probl√®me persiste, ex√©cuter les √©tapes de d√©pannage ci-dessus"
echo ""