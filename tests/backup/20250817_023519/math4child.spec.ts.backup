import { test, expect } from '@playwright/test';

test.describe('Math4Child v4.2.0 - Tests E2E Complets (CONFORMIT√â TOTALE)', () => {
  test.beforeEach(async ({ page }) => {
    await page.goto('/');
  });

  test('Page d\'accueil - √âl√©ments requis selon README.md', async ({ page }) => {
    // V√©rifier le titre
    await expect(page).toHaveTitle(/Math4Child v4.2.0/);
    
    // V√©rifier la marque Math4Child (seule marque visible)
    await expect(page.locator('text=Math4Child')).toBeVisible();
    
    // V√©rifier la version
    await expect(page.locator('text=v4.2.0')).toBeVisible();
    
    // V√©rifier les 200+ langues support√©es
    await expect(page.locator('text=200+')).toBeVisible();
    await expect(page.locator('text=Langues Support√©es')).toBeVisible();
    
    // V√©rifier les 5 niveaux de progression
    await expect(page.locator('text=5')).toBeVisible();
    await expect(page.locator('text=Niveaux de Progression')).toBeVisible();
    
    // V√©rifier les 100 r√©ponses minimum
    await expect(page.locator('text=100')).toBeVisible();
    await expect(page.locator('text=R√©ponses Min/Niveau')).toBeVisible();
    
    // V√©rifier les 6 innovations r√©volutionnaires
    await expect(page.locator('text=6')).toBeVisible();
    await expect(page.locator('text=Innovations R√©volutionnaires')).toBeVisible();
  });

  test('üîí CONFORMIT√â TOTALE - Aucun √©l√©ment interdit affich√©', async ({ page }) => {
    // V√©rifier que les r√©f√©rences interdites n'apparaissent JAMAIS
    await expect(page.locator('text=GOTEST')).not.toBeVisible();
    await expect(page.locator('text=53958712100028')).not.toBeVisible();
    await expect(page.locator('text=gotesttech@gmail.com')).not.toBeVisible();
    await expect(page.locator('text=Sp√©cifications primordiales')).not.toBeVisible();
    await expect(page.locator('text=SP√âCIFICATIONS PRIMORDIALES')).not.toBeVisible();
    await expect(page.locator('text=Tarification comp√©titive selon sp√©cifications README.md')).not.toBeVisible();
    
    console.log('‚úÖ CONFORMIT√â VALID√âE: Aucun √©l√©ment interdit trouv√©');
  });

  test('Contacts conformes - Seuls les emails autoris√©s', async ({ page }) => {
    // V√©rifier que seuls les emails autoris√©s apparaissent
    await expect(page.locator('text=support@math4child.com')).toBeVisible();
    await expect(page.locator('text=commercial@math4child.com')).toBeVisible();
    
    // Double v√©rification: aucun email interdit
    await expect(page.locator('text=gotesttech@gmail.com')).not.toBeVisible();
  });

  test('Plan PREMIUM - Correctement marqu√© "LE PLUS CHOISI"', async ({ page }) => {
    await expect(page.locator('text=LE PLUS CHOISI')).toBeVisible();
    await expect(page.locator('text=PREMIUM')).toBeVisible();
    
    // V√©rifier que PREMIUM est visuellement mis en avant
    const premiumPlan = page.locator('[class*="ring-4 ring-yellow-400"]');
    await expect(premiumPlan).toBeVisible();
  });

  test('5 Plans d\'abonnement selon README.md', async ({ page }) => {
    // V√©rifier les 5 plans avec profils exacts
    await expect(page.locator('text=BASIC')).toBeVisible();
    await expect(page.locator('text=STANDARD')).toBeVisible();
    await expect(page.locator('text=PREMIUM')).toBeVisible();
    await expect(page.locator('text=FAMILLE')).toBeVisible();
    await expect(page.locator('text=ULTIMATE')).toBeVisible();
    
    // V√©rifier les prix exacts selon README.md
    await expect(page.locator('text=‚Ç¨4.99')).toBeVisible();
    await expect(page.locator('text=‚Ç¨9.99')).toBeVisible();
    await expect(page.locator('text=‚Ç¨14.99')).toBeVisible();
    await expect(page.locator('text=‚Ç¨19.99')).toBeVisible();
    await expect(page.locator('text=‚Ç¨29.99')).toBeVisible();
  });

  test('200+ Langues avec drapeaux sp√©cifiques', async ({ page }) => {
    // Cliquer sur le s√©lecteur de langue
    await page.click('button:has-text("Fran√ßais")');
    
    // V√©rifier drapeaux sp√©cifiques selon README.md
    await expect(page.locator('text=üá≤üá¶')).toBeVisible(); // Arabe Afrique
    await expect(page.locator('text=üáµüá∏')).toBeVisible(); // Arabe Moyen-Orient
    
    // V√©rifier l'indication des 200+ langues
    await expect(page.locator('text=+180 autres langues disponibles')).toBeVisible();
  });

  test('6 Innovations r√©volutionnaires', async ({ page }) => {
    // V√©rifier les 6 innovations
    await expect(page.locator('text=IA Adaptative Avanc√©e')).toBeVisible();
    await expect(page.locator('text=Reconnaissance Manuscrite')).toBeVisible();
    await expect(page.locator('text=R√©alit√© Augment√©e 3D')).toBeVisible();
    await expect(page.locator('text=Assistant Vocal IA')).toBeVisible();
    await expect(page.locator('text=Moteur d\'Exercices R√©volutionnaire')).toBeVisible();
    await expect(page.locator('text=Syst√®me Langues Universel')).toBeVisible();
    
    // V√©rifier la mention "PREMI√àRE MONDIALE"
    await expect(page.locator('text=PREMI√àRE MONDIALE')).toBeVisible();
  });

  test('5 Op√©rations math√©matiques', async ({ page }) => {
    // V√©rifier les 5 op√©rations
    await expect(page.locator('text=Addition')).toBeVisible();
    await expect(page.locator('text=Soustraction')).toBeVisible();
    await expect(page.locator('text=Multiplication')).toBeVisible();
    await expect(page.locator('text=Division')).toBeVisible();
    await expect(page.locator('text=Mixte')).toBeVisible();
  });

  test('Footer - Informations 100% conformes', async ({ page }) => {
    // V√©rifier les √©l√©ments du footer conformes
    await expect(page.locator('footer')).toBeVisible();
    await expect(page.locator('text=¬© 2025 Math4Child')).toBeVisible();
    await expect(page.locator('text=200+ Langues')).toBeVisible();
    await expect(page.locator('text=IA Adaptative')).toBeVisible();
    await expect(page.locator('text=100% S√©curis√©')).toBeVisible();
    
    // V√©rifier la conformit√© s√©curit√©
    await expect(page.locator('text=Conformit√© COPPA/GDPR')).toBeVisible();
    await expect(page.locator('text=Chiffrement bout-en-bout')).toBeVisible();
    
    // Double v√©rification: aucune r√©f√©rence interdite
    await expect(page.locator('footer')).not.toContainText('GOTEST');
    await expect(page.locator('footer')).not.toContainText('53958712100028');
    await expect(page.locator('footer')).not.toContainText('gotesttech');
  });
});
