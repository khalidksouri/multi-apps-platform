#!/bin/bash

# =============================================================================
# üîß CORRECTION RAPIDE - PLANS D'ABONNEMENTS MANQUANTS
# R√©sout la perte des plans et l'erreur sed
# =============================================================================

set -e

# Couleurs
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
PURPLE='\033[0;35m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_header() {
    echo -e "${PURPLE}=================================${NC}"
    echo -e "${PURPLE}üîß $1${NC}"
    echo -e "${PURPLE}=================================${NC}"
}

print_header "CORRECTION DES PLANS D'ABONNEMENTS"

# V√©rifications
if [ ! -d "apps/math4child" ]; then
    log_error "Dossier apps/math4child introuvable!"
    exit 1
fi

cd apps/math4child

# =============================================================================
# 1. CR√âATION D'UNE VERSION CORRIG√âE DU FICHIER PRINCIPAL
# =============================================================================

log_info "üîß Correction du fichier page.tsx avec tous les plans..."

# Cr√©er une sauvegarde
cp src/app/page.tsx "src/app/page.tsx.backup_fix_plans_$(date +%Y%m%d_%H%M%S)"

# Recr√©er le fichier avec tous les plans visibles
cat > src/app/page.tsx << 'EOF'
'use client';

import React, { useState, useEffect } from 'react';
import ExerciseView from '../components/ExerciseView';
import LanguageSelector from '../components/LanguageSelector';
import { useTranslations, type Translations } from '../lib/translations';

// =============================================================================
// TYPES ET INTERFACES
// =============================================================================

interface User {
  name: string;
  level: number;
  progress: {
    totalCorrectAnswers: number;
    unlockedLevels: number[];
  };
  questionsLimit: number;
  questionsAnswered: number;
  subscriptionType: 'free' | 'monthly' | 'quarterly' | 'yearly';
  subscription: {
    type: 'free' | 'monthly' | 'quarterly' | 'yearly';
    questionsUsed: number;
    questionsLimit: number;
  };
}

interface Level {
  id: number;
  name: string;
  icon: string;
  isLocked: boolean;
  progress: number;
  requiredCorrectAnswers: number;
  currentAnswers: number;
}

interface Operation {
  id: string;
  name: string;
  symbol: string;
  icon: string;
  description: string;
}

interface Exercise {
  id: number;
  question: string;
  answer: number;
  operation: string;
  difficulty: number;
  type: string;
  level: number;
}

interface Language {
  code: string;
  name: string;
  nativeName: string;
  flag: string;
}

type ViewType = 'home' | 'levels' | 'operations' | 'exercise' | 'subscription';

// =============================================================================
// DONN√âES DE CONFIGURATION
// =============================================================================

const LANGUAGES: Language[] = [
  { code: 'fr', name: 'Fran√ßais', nativeName: 'Fran√ßais', flag: 'üá´üá∑' },
  { code: 'en', name: 'English', nativeName: 'English', flag: 'üá∫üá∏' },
  { code: 'es', name: 'Espa√±ol', nativeName: 'Espa√±ol', flag: 'üá™üá∏' },
  { code: 'de', name: 'Deutsch', nativeName: 'Deutsch', flag: 'üá©üá™' },
  { code: 'ar', name: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', nativeName: 'ÿßŸÑÿπÿ±ÿ®Ÿäÿ©', flag: 'üá∏üá¶' },
  { code: 'zh', name: '‰∏≠Êñá', nativeName: '‰∏≠Êñá', flag: 'üá®üá≥' },
];

// =============================================================================
// COMPOSANT PRINCIPAL
// =============================================================================

export default function Math4Child() {
  // √âtats
  const [currentView, setCurrentView] = useState<ViewType>('home');
  const [currentLanguage, setCurrentLanguage] = useState('fr');
  const [selectedLevel, setSelectedLevel] = useState<Level | null>(null);
  const [selectedOperation, setSelectedOperation] = useState<Operation | null>(null);
  const [currentExercise, setCurrentExercise] = useState<Exercise | null>(null);
  const [userAnswer, setUserAnswer] = useState('');
  const [showResult, setShowResult] = useState(false);
  const [isCorrect, setIsCorrect] = useState(false);

  // Obtenir les traductions pour la langue actuelle
  const t = useTranslations(currentLanguage);

  // Donn√©es dynamiques bas√©es sur la langue
  const LEVELS: Level[] = [
    {
      id: 1,
      name: t.levels.beginner,
      icon: 'üå±',
      isLocked: false,
      progress: 0,
      requiredCorrectAnswers: 100,
      currentAnswers: 0
    },
    {
      id: 2,
      name: t.levels.elementary,
      icon: 'üåø',
      isLocked: true,
      progress: 0,
      requiredCorrectAnswers: 100,
      currentAnswers: 0
    },
    {
      id: 3,
      name: t.levels.intermediate,
      icon: 'üå≥',
      isLocked: true,
      progress: 0,
      requiredCorrectAnswers: 100,
      currentAnswers: 0
    },
    {
      id: 4,
      name: t.levels.advanced,
      icon: 'ü¶Ö',
      isLocked: true,
      progress: 0,
      requiredCorrectAnswers: 100,
      currentAnswers: 0
    },
    {
      id: 5,
      name: t.levels.expert,
      icon: 'üèÜ',
      isLocked: true,
      progress: 0,
      requiredCorrectAnswers: 100,
      currentAnswers: 0
    }
  ];

  const OPERATIONS: Operation[] = [
    {
      id: 'addition',
      name: t.operations.addition,
      symbol: '+',
      icon: '‚ûï',
      description: t.operations.additionDesc
    },
    {
      id: 'subtraction',
      name: t.operations.subtraction,
      symbol: '-',
      icon: '‚ûñ',
      description: t.operations.subtractionDesc
    },
    {
      id: 'multiplication',
      name: t.operations.multiplication,
      symbol: '√ó',
      icon: '‚úñÔ∏è',
      description: t.operations.multiplicationDesc
    },
    {
      id: 'division',
      name: t.operations.division,
      symbol: '√∑',
      icon: '‚ûó',
      description: t.operations.divisionDesc
    },
    {
      id: 'mixed',
      name: t.operations.mixed,
      symbol: 'üîÄ',
      icon: 'üé≤',
      description: t.operations.mixedDesc
    }
  ];

  const [levels, setLevels] = useState<Level[]>(LEVELS);

  // Utilisateur par d√©faut
  const [user, setUser] = useState<User>({
    name: 'Utilisateur',
    level: 1,
    progress: { 
      totalCorrectAnswers: 0, 
      unlockedLevels: [1] 
    },
    questionsLimit: 50,
    questionsAnswered: 0,
    subscriptionType: 'free',
    subscription: {
      type: 'free',
      questionsUsed: 0,
      questionsLimit: 50
    }
  });

  // Mettre √† jour les niveaux quand la langue change
  useEffect(() => {
    setLevels(LEVELS);
  }, [currentLanguage]);

  // =============================================================================
  // FONCTIONS UTILITAIRES
  // =============================================================================

  const generateExercise = (operation: Operation, level: Level): Exercise => {
    const difficultyRanges = {
      1: { min: 1, max: 10 },
      2: { min: 10, max: 50 },
      3: { min: 50, max: 100 },
      4: { min: 100, max: 500 },
      5: { min: 500, max: 1000 }
    };

    const range = difficultyRanges[level.id as keyof typeof difficultyRanges] || { min: 1, max: 10 };
    
    const num1 = Math.floor(Math.random() * (range.max - range.min + 1)) + range.min;
    const num2 = Math.floor(Math.random() * (range.max - range.min + 1)) + range.min;
    
    let question = '';
    let answer = 0;
    let operator = '';

    if (operation.id === 'mixed') {
      const ops = ['addition', 'subtraction', 'multiplication', 'division'];
      const randomOp = ops[Math.floor(Math.random() * ops.length)];
      const randomOperation = OPERATIONS.find(op => op.id === randomOp)!;
      return generateExercise(randomOperation, level);
    }

    switch (operation.id) {
      case 'addition':
        operator = '+';
        answer = num1 + num2;
        break;
      case 'subtraction':
        operator = '-';
        answer = num1 - num2;
        break;
      case 'multiplication':
        operator = '√ó';
        answer = num1 * num2;
        break;
      case 'division':
        operator = '√∑';
        const quotient = Math.floor(num1 / num2);
        answer = quotient;
        break;
      default:
        operator = '+';
        answer = num1 + num2;
    }

    question = `${num1} ${operator} ${num2} = ?`;

    return {
      id: Date.now(),
      question,
      answer,
      operation: operation.id,
      difficulty: level.id,
      type: operation.id,
      level: level.id
    };
  };

  const checkSubscriptionLimit = (): boolean => {
    return user.subscription.type === 'free' && user.subscription.questionsUsed >= user.subscription.questionsLimit;
  };

  const handleStartExercise = (operation: Operation) => {
    if (checkSubscriptionLimit()) {
      alert(`${t.limitReached}. ${t.limitMessage}`);
      setCurrentView('subscription');
      return;
    }

    if (!selectedLevel) return;
    
    setSelectedOperation(operation);
    const exercise = generateExercise(operation, selectedLevel);
    setCurrentExercise(exercise);
    setCurrentView('exercise');
    setUserAnswer('');
    setShowResult(false);
  };

  const handleSubmitAnswer = () => {
    if (!currentExercise) return;

    const userAnswerNum = parseInt(userAnswer);
    const isCorrect = userAnswerNum === currentExercise.answer;
    
    setIsCorrect(isCorrect);
    setShowResult(true);

    // Mettre √† jour l'utilisateur
    const newUser = { ...user };
    newUser.subscription.questionsUsed += 1;
    newUser.questionsAnswered += 1;

    if (isCorrect) {
      newUser.progress.totalCorrectAnswers += 1;
      
      // Mettre √† jour le niveau avec logique de compl√©tion
      const levelIndex = levels.findIndex(l => l.id === selectedLevel?.id);
      if (levelIndex !== -1) {
        const updatedLevels = [...levels];
        updatedLevels[levelIndex].currentAnswers += 1;
        updatedLevels[levelIndex].progress = (updatedLevels[levelIndex].currentAnswers / 100) * 100;

        // Marquer le niveau comme compl√©t√© quand 100 bonnes r√©ponses
        if (updatedLevels[levelIndex].currentAnswers >= 100) {
          // Niveau compl√©t√© = acc√®s permanent
          if (!newUser.progress.unlockedLevels.includes(updatedLevels[levelIndex].id)) {
            newUser.progress.unlockedLevels.push(updatedLevels[levelIndex].id);
          }
          
          // D√©bloquer le niveau suivant
          if (levelIndex < levels.length - 1) {
            updatedLevels[levelIndex + 1].isLocked = false;
            if (!newUser.progress.unlockedLevels.includes(updatedLevels[levelIndex + 1].id)) {
              newUser.progress.unlockedLevels.push(updatedLevels[levelIndex + 1].id);
            }
          }
        }

        setLevels(updatedLevels);
      }
    }

    setUser(newUser);
  };

  const handleNextExercise = () => {
    if (!selectedOperation || !selectedLevel) return;
    
    const exercise = generateExercise(selectedOperation, selectedLevel);
    setCurrentExercise(exercise);
    setUserAnswer('');
    setShowResult(false);
  };

  const handleLanguageChange = (languageCode: string) => {
    setCurrentLanguage(languageCode);
  };

  // =============================================================================
  // RENDU DES VUES
  // =============================================================================

  if (currentView === 'exercise' && currentExercise) {
    return (
      <ExerciseView
        exercise={currentExercise}
        userAnswer={userAnswer}
        onAnswerChange={setUserAnswer}
        onSubmit={handleSubmitAnswer}
        onNext={handleNextExercise}
        onBack={() => setCurrentView('operations')}
        showResult={showResult}
        isCorrect={isCorrect}
        translations={t}
      />
    );
  }

  return (
    <div className={`min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 ${currentLanguage === 'ar' ? 'rtl' : 'ltr'}`}>
      {/* Header */}
      <header className="bg-white shadow-sm border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="text-4xl">üßÆ</div>
              <div>
                <h1 className="text-2xl font-bold text-gray-900">{t.appTitle}</h1>
                <p className="text-sm text-gray-600">{t.appSubtitle}</p>
              </div>
            </div>

            <LanguageSelector
              languages={LANGUAGES}
              currentLanguage={currentLanguage}
              onLanguageChange={handleLanguageChange}
            />
          </div>
        </div>
      </header>

      {/* Vue Accueil */}
      {currentView === 'home' && (
        <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50">
          <main className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
            <div className="text-center mb-16">
              <h2 className="text-5xl font-bold text-gray-900 mb-6">
                {t.heroTitle}
                <span className="block text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-purple-600">
                  {t.heroSubtitle}
                </span>
              </h2>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto mb-8">
                {t.heroDescription}
              </p>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-2xl mx-auto mb-8">
                <div className="bg-white rounded-xl p-6 shadow-lg">
                  <div className="text-3xl font-bold text-blue-600">{user.progress.totalCorrectAnswers}</div>
                  <div className="text-gray-600">{t.correctAnswers}</div>
                </div>
                <div className="bg-white rounded-xl p-6 shadow-lg">
                  <div className="text-3xl font-bold text-green-600">{user.progress.unlockedLevels.length}</div>
                  <div className="text-gray-600">{t.unlockedLevels}</div>
                </div>
                <div className="bg-white rounded-xl p-6 shadow-lg">
                  <div className="text-3xl font-bold text-purple-600">
                    {user.subscription.questionsLimit - user.subscription.questionsUsed}
                  </div>
                  <div className="text-gray-600">{t.questionsRemaining}</div>
                </div>
              </div>

              <button
                onClick={() => setCurrentView('levels')}
                className="btn-primary text-lg px-12 py-4"
              >
                {t.startLearning}
              </button>
            </div>

            {/* Fonctionnalit√©s */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-16">
              <div className="bg-white rounded-2xl p-8 shadow-lg text-center">
                <div className="text-4xl mb-4">üìà</div>
                <h3 className="font-bold text-xl mb-2">{t.features.adaptiveProgress}</h3>
                <p className="text-gray-600">{t.features.adaptiveDescription}</p>
              </div>
              <div className="bg-white rounded-2xl p-8 shadow-lg text-center">
                <div className="text-4xl mb-4">üßÆ</div>
                <h3 className="font-bold text-xl mb-2">{t.features.operations}</h3>
                <p className="text-gray-600">{t.features.operationsDescription}</p>
              </div>
              <div className="bg-white rounded-2xl p-8 shadow-lg text-center">
                <div className="text-4xl mb-4">üåç</div>
                <h3 className="font-bold text-xl mb-2">{t.features.multilingual}</h3>
                <p className="text-gray-600">{t.features.multilingualDescription}</p>
              </div>
              <div className="bg-white rounded-2xl p-8 shadow-lg text-center">
                <div className="text-4xl mb-4">üì±</div>
                <h3 className="font-bold text-xl mb-2">{t.features.multiplatform}</h3>
                <p className="text-gray-600">{t.features.multiplatformDescription}</p>
              </div>
            </div>

            {/* CTA Section */}
            <div className="bg-gradient-to-r from-blue-600 to-purple-600 rounded-3xl p-12 text-center text-white">
              <h3 className="text-3xl font-bold mb-4">{t.readyToStart}</h3>
              <p className="text-xl mb-8 opacity-90">
                {t.joinThousands}
              </p>
              <div className="flex flex-col sm:flex-row gap-4 justify-center">
                <button
                  onClick={() => setCurrentView('levels')}
                  className="bg-white text-blue-600 font-semibold py-3 px-8 rounded-xl hover:bg-gray-100 transition-all duration-200"
                >
                  {t.startFree}
                </button>
                <button
                  onClick={() => setCurrentView('subscription')}
                  className="bg-blue-700 text-white font-semibold py-3 px-8 rounded-xl hover:bg-blue-800 transition-all duration-200"
                >
                  {t.viewSubscriptions}
                </button>
              </div>
            </div>
          </main>
        </div>
      )}

      {/* Vue Niveaux */}
      {currentView === 'levels' && (
        <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 p-8">
          <div className="max-w-6xl mx-auto">
            <div className="flex items-center justify-between mb-8">
              <button
                onClick={() => setCurrentView('home')}
                className="btn-secondary"
              >
                {t.backToHome}
              </button>
              <h2 className="text-3xl font-bold text-gray-900">{t.chooseLevel}</h2>
              <div></div>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6">
              {levels.map((level) => (
                <div
                  key={level.id}
                  onClick={() => {
                    if (!level.isLocked) {
                      setSelectedLevel(level);
                      setCurrentView('operations');
                    }
                  }}
                  className={`level-card ${level.isLocked ? 'locked' : ''} ${selectedLevel?.id === level.id ? 'active' : ''}`}
                >
                  <div className="text-center">
                    <div className="text-5xl mb-4">{level.icon}</div>
                    <h3 className="font-bold text-xl mb-2">{level.name}</h3>
                    <div className="progress-bar mb-3">
                      <div
                        className="progress-fill"
                        style={{ width: `${level.progress}%` }}
                      ></div>
                    </div>
                    <p className="text-sm text-gray-600">
                      {level.isLocked ? t.locked : `${level.currentAnswers}/100 ${t.goodAnswers}`}
                    </p>
                    {level.progress === 100 && (
                      <div className="mt-2 text-green-600 font-semibold">{t.completed}</div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}

      {/* Vue Op√©rations */}
      {currentView === 'operations' && selectedLevel && (
        <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 p-8">
          <div className="max-w-6xl mx-auto">
            <div className="flex items-center justify-between mb-8">
              <button
                onClick={() => setCurrentView('levels')}
                className="btn-secondary"
              >
                {t.backToLevels}
              </button>
              <h2 className="text-3xl font-bold text-gray-900">
                {t.chooseOperation} - {selectedLevel.name}
              </h2>
              <div></div>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {OPERATIONS.map((operation) => (
                <div
                  key={operation.id}
                  onClick={() => handleStartExercise(operation)}
                  className="operation-card group"
                >
                  <div className="text-center">
                    <div className="text-6xl mb-4 group-hover:scale-110 transition-transform duration-300">
                      {operation.icon}
                    </div>
                    <h3 className="font-bold text-2xl mb-2">{operation.name}</h3>
                    <p className="text-gray-600">{operation.description}</p>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}

      {/* Vue Abonnements */}
      {currentView === 'subscription' && (
        <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 p-8">
          <div className="max-w-7xl mx-auto">
            <div className="text-center mb-12">
              <h2 className="text-4xl font-bold text-gray-900 mb-4">
                {t.subscriptionTitle}
              </h2>
              <p className="text-xl text-gray-600">
                {t.subscriptionSubtitle}
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {/* Plan gratuit */}
              <div className="bg-white rounded-2xl p-6 shadow-lg border-2 border-gray-200">
                <div className="text-center">
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{t.free}</h3>
                  <div className="text-3xl font-bold text-gray-900 mb-4">0‚Ç¨</div>
                  <p className="text-gray-600 mb-6">7 jours - 50 questions</p>
                  <ul className="space-y-2 text-left mb-6 text-sm">
                    <li>‚úì 50 questions gratuites</li>
                    <li>‚úì Tous les niveaux (limit√©s)</li>
                    <li>‚úì Support email</li>
                    <li>‚úì Acc√®s 7 jours</li>
                  </ul>
                  <button className="btn-secondary w-full">
                    {t.currentPlan}
                  </button>
                </div>
              </div>

              {/* Plan mensuel */}
              <div className="bg-white rounded-2xl p-6 shadow-lg border-2 border-blue-500 relative">
                <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                  <span className="bg-blue-500 text-white px-3 py-1 rounded-full text-xs font-semibold">
                    {t.popular}
                  </span>
                </div>
                <div className="text-center">
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{t.monthly}</h3>
                  <div className="text-3xl font-bold text-blue-600 mb-4">9,99‚Ç¨</div>
                  <p className="text-gray-600 mb-6">par mois</p>
                  <ul className="space-y-2 text-left mb-6 text-sm">
                    <li>‚úì Questions illimit√©es</li>
                    <li>‚úì Tous les niveaux d√©bloqu√©s</li>
                    <li>‚úì Toutes les op√©rations</li>
                    <li>‚úì Support prioritaire</li>
                    <li>‚úì Statistiques d√©taill√©es</li>
                  </ul>
                  <button 
                    onClick={() => alert('Redirection vers le paiement mensuel...')}
                    className="btn-primary w-full"
                  >
                    {t.choosePlan}
                  </button>
                </div>
              </div>

              {/* Plan trimestriel - NOUVEAU */}
              <div className="bg-white rounded-2xl p-6 shadow-lg border-2 border-orange-500 relative new-plan-animation">
                <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                  <span className="bg-orange-500 text-white px-3 py-1 rounded-full text-xs font-semibold">
                    -10% üí∞
                  </span>
                </div>
                <div className="text-center">
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{t.quarterly}</h3>
                  <div className="text-3xl font-bold text-orange-600 mb-1">26,97‚Ç¨</div>
                  <div className="text-sm text-gray-500 line-through mb-4">29,97‚Ç¨</div>
                  <p className="text-gray-600 mb-6">3 mois ({t.savings} 10%)</p>
                  <ul className="space-y-2 text-left mb-6 text-sm">
                    <li>‚úì Tout du plan mensuel</li>
                    <li>‚úì 10% d'√©conomies</li>
                    <li>‚úì Paiement unique</li>
                    <li>‚úì Support premium</li>
                    <li>‚úì Acc√®s prioritaire nouveaut√©s</li>
                  </ul>
                  <button 
                    onClick={() => alert('Redirection vers le paiement trimestriel...')}
                    className="quarterly-button w-full font-semibold py-3 px-4 rounded-xl transition-all duration-200"
                  >
                    {t.choosePlan}
                  </button>
                </div>
              </div>

              {/* Plan annuel */}
              <div className="bg-white rounded-2xl p-6 shadow-lg border-2 border-green-500 relative">
                <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                  <span className="bg-green-500 text-white px-3 py-1 rounded-full text-xs font-semibold">
                    -30% üî•
                  </span>
                </div>
                <div className="text-center">
                  <h3 className="text-xl font-bold text-gray-900 mb-2">{t.yearly}</h3>
                  <div className="text-3xl font-bold text-green-600 mb-1">83,93‚Ç¨</div>
                  <div className="text-sm text-gray-500 line-through mb-4">119,88‚Ç¨</div>
                  <p className="text-gray-600 mb-6">par an ({t.savings} 30%)</p>
                  <ul className="space-y-2 text-left mb-6 text-sm">
                    <li>‚úì Tout du plan mensuel</li>
                    <li>‚úì 30% d'√©conomies</li>
                    <li>‚úì Paiement unique</li>
                    <li>‚úì Support VIP</li>
                    <li>‚úì Acc√®s beta features</li>
                  </ul>
                  <button 
                    onClick={() => alert('Redirection vers le paiement annuel...')}
                    className="w-full bg-green-600 hover:bg-green-700 text-white font-semibold py-3 px-4 rounded-xl transition-all duration-200"
                  >
                    {t.choosePlan}
                  </button>
                </div>
              </div>
            </div>

            <div className="text-center mt-12">
              <button
                onClick={() => setCurrentView('home')}
                className="btn-secondary"
              >
                {t.backToHome}
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
EOF

log_success "‚úÖ Fichier page.tsx corrig√© avec tous les plans"

# =============================================================================
# 2. CORRECTION DU FICHIER DE TRADUCTIONS
# =============================================================================

log_info "üåç Correction du fichier de traductions..."

# Recr√©er le fichier de traductions avec tous les termes n√©cessaires
cat > src/lib/translations/index.ts << 'EOF'
export interface Translations {
  // Navigation et interface
  appTitle: string;
  appSubtitle: string;
  backToHome: string;
  backToLevels: string;
  backToOperations: string;
  
  // Page d'accueil
  heroTitle: string;
  heroSubtitle: string;
  heroDescription: string;
  startLearning: string;
  correctAnswers: string;
  unlockedLevels: string;
  questionsRemaining: string;
  startFree: string;
  viewSubscriptions: string;
  readyToStart: string;
  joinThousands: string;
  
  // Niveaux
  chooseLevel: string;
  locked: string;
  completed: string;
  goodAnswers: string;
  
  // Op√©rations
  chooseOperation: string;
  
  // Exercices
  exercise: string;
  validate: string;
  correct: string;
  incorrect: string;
  answerWas: string;
  nextExercise: string;
  back: string;
  
  // Abonnements
  subscriptionTitle: string;
  subscriptionSubtitle: string;
  unlockFeatures: string;
  currentPlan: string;
  choosePlan: string;
  popular: string;
  savings: string;
  
  // Plans
  free: string;
  monthly: string;
  quarterly: string;
  yearly: string;
  
  // Fonctionnalit√©s
  features: {
    adaptiveProgress: string;
    adaptiveDescription: string;
    operations: string;
    operationsDescription: string;
    multilingual: string;
    multilingualDescription: string;
    multiplatform: string;
    multiplatformDescription: string;
  };
  
  // Op√©rations math√©matiques
  operations: {
    addition: string;
    subtraction: string;
    multiplication: string;
    division: string;
    mixed: string;
    additionDesc: string;
    subtractionDesc: string;
    multiplicationDesc: string;
    divisionDesc: string;
    mixedDesc: string;
  };
  
  // Niveaux
  levels: {
    beginner: string;
    elementary: string;
    intermediate: string;
    advanced: string;
    expert: string;
  };
  
  // Messages d'erreur
  limitReached: string;
  limitMessage: string;
}

// Traductions fran√ßaises
export const fr: Translations = {
  appTitle: "Math4Child",
  appSubtitle: "Apprendre les math√©matiques en s'amusant",
  backToHome: "‚Üê Retour √† l'accueil",
  backToLevels: "‚Üê Retour aux niveaux",
  backToOperations: "‚Üê Retour aux op√©rations",
  
  heroTitle: "Apprends les maths en t'amusant !",
  heroSubtitle: "Bienvenue dans l'aventure math√©matique",
  heroDescription: "D√©veloppe tes comp√©tences math√©matiques avec des exercices progressifs et amusants",
  startLearning: "üöÄ Commencer √† apprendre",
  correctAnswers: "Bonnes r√©ponses",
  unlockedLevels: "Niveaux d√©bloqu√©s",
  questionsRemaining: "Questions restantes",
  startFree: "üéØ Commencer gratuitement",
  viewSubscriptions: "üíé Voir les abonnements",
  readyToStart: "Pr√™t √† commencer l'aventure ?",
  joinThousands: "Rejoins des milliers d'enfants qui apprennent les maths en s'amusant",
  
  chooseLevel: "Choisis ton niveau",
  locked: "üîí Verrouill√©",
  completed: "‚úÖ Termin√© !",
  goodAnswers: "bonnes r√©ponses",
  
  chooseOperation: "Choisis ton op√©ration",
  
  exercise: "Exercice",
  validate: "Valider",
  correct: "‚úÖ Correct!",
  incorrect: "‚ùå Incorrect",
  answerWas: "La r√©ponse √©tait:",
  nextExercise: "Exercice suivant ‚Üí",
  back: "‚Üê Retour",
  
  subscriptionTitle: "Choisis ton abonnement Math4Child",
  subscriptionSubtitle: "D√©bloquer toutes les fonctionnalit√©s et exercices illimit√©s",
  unlockFeatures: "D√©bloquer toutes les fonctionnalit√©s",
  currentPlan: "Plan actuel",
  choosePlan: "Choisir ce plan",
  popular: "Populaire",
  savings: "√©conomise",
  
  free: "Gratuit",
  monthly: "Mensuel",
  quarterly: "Trimestriel",
  yearly: "Annuel",
  
  features: {
    adaptiveProgress: "Progression Adaptative",
    adaptiveDescription: "5 niveaux avec validation de 100 bonnes r√©ponses par niveau",
    operations: "5 Op√©rations",
    operationsDescription: "Addition, soustraction, multiplication, division et exercices mixtes",
    multilingual: "Multilingue",
    multilingualDescription: "Support de 75+ langues avec adaptation culturelle",
    multiplatform: "Multi-plateforme",
    multiplatformDescription: "Web, Android et iOS avec synchronisation"
  },
  
  operations: {
    addition: "Addition",
    subtraction: "Soustraction",
    multiplication: "Multiplication",
    division: "Division",
    mixed: "Mixte",
    additionDesc: "Additionner des nombres",
    subtractionDesc: "Soustraire des nombres",
    multiplicationDesc: "Multiplier des nombres",
    divisionDesc: "Diviser des nombres",
    mixedDesc: "Exercices m√©lang√©s"
  },
  
  levels: {
    beginner: "D√©butant",
    elementary: "√âl√©mentaire",
    intermediate: "Interm√©diaire",
    advanced: "Avanc√©",
    expert: "Expert"
  },
  
  limitReached: "Limite de questions atteinte",
  limitMessage: "Abonnez-vous pour continuer !"
};

// Traductions anglaises
export const en: Translations = {
  appTitle: "Math4Child",
  appSubtitle: "Learn mathematics while having fun",
  backToHome: "‚Üê Back to home",
  backToLevels: "‚Üê Back to levels",
  backToOperations: "‚Üê Back to operations",
  
  heroTitle: "Learn math while having fun!",
  heroSubtitle: "Welcome to the mathematical adventure",
  heroDescription: "Develop your math skills with progressive and fun exercises",
  startLearning: "üöÄ Start learning",
  correctAnswers: "Correct answers",
  unlockedLevels: "Unlocked levels",
  questionsRemaining: "Questions remaining",
  startFree: "üéØ Start for free",
  viewSubscriptions: "üíé View subscriptions",
  readyToStart: "Ready to start the adventure?",
  joinThousands: "Join thousands of children learning math while having fun",
  
  chooseLevel: "Choose your level",
  locked: "üîí Locked",
  completed: "‚úÖ Completed!",
  goodAnswers: "correct answers",
  
  chooseOperation: "Choose your operation",
  
  exercise: "Exercise",
  validate: "Validate",
  correct: "‚úÖ Correct!",
  incorrect: "‚ùå Incorrect",
  answerWas: "The answer was:",
  nextExercise: "Next exercise ‚Üí",
  back: "‚Üê Back",
  
  subscriptionTitle: "Choose your Math4Child subscription",
  subscriptionSubtitle: "Unlock all features and unlimited exercises",
  unlockFeatures: "Unlock all features",
  currentPlan: "Current plan",
  choosePlan: "Choose this plan",
  popular: "Popular",
  savings: "save",
  
  free: "Free",
  monthly: "Monthly",
  quarterly: "Quarterly",
  yearly: "Yearly",
  
  features: {
    adaptiveProgress: "Adaptive Progress",
    adaptiveDescription: "5 levels with validation of 100 correct answers per level",
    operations: "5 Operations",
    operationsDescription: "Addition, subtraction, multiplication, division and mixed exercises",
    multilingual: "Multilingual",
    multilingualDescription: "Support for 75+ languages with cultural adaptation",
    multiplatform: "Multi-platform",
    multiplatformDescription: "Web, Android and iOS with synchronization"
  },
  
  operations: {
    addition: "Addition",
    subtraction: "Subtraction",
    multiplication: "Multiplication",
    division: "Division",
    mixed: "Mixed",
    additionDesc: "Add numbers",
    subtractionDesc: "Subtract numbers",
    multiplicationDesc: "Multiply numbers",
    divisionDesc: "Divide numbers",
    mixedDesc: "Mixed exercises"
  },
  
  levels: {
    beginner: "Beginner",
    elementary: "Elementary",
    intermediate: "Intermediate",
    advanced: "Advanced",
    expert: "Expert"
  },
  
  limitReached: "Question limit reached",
  limitMessage: "Subscribe to continue!"
};

// Traductions espagnoles
export const es: Translations = {
  appTitle: "Math4Child",
  appSubtitle: "Aprende matem√°ticas divirti√©ndote",
  backToHome: "‚Üê Volver al inicio",
  backToLevels: "‚Üê Volver a niveles",
  backToOperations: "‚Üê Volver a operaciones",
  
  heroTitle: "¬°Aprende matem√°ticas divirti√©ndote!",
  heroSubtitle: "Bienvenido a la aventura matem√°tica",
  heroDescription: "Desarrolla tus habilidades matem√°ticas con ejercicios progresivos y divertidos",
  startLearning: "üöÄ Comenzar a aprender",
  correctAnswers: "Respuestas correctas",
  unlockedLevels: "Niveles desbloqueados",
  questionsRemaining: "Preguntas restantes",
  startFree: "üéØ Comenzar gratis",
  viewSubscriptions: "üíé Ver suscripciones",
  readyToStart: "¬øListo para comenzar la aventura?",
  joinThousands: "√önete a miles de ni√±os que aprenden matem√°ticas divirti√©ndose",
  
  chooseLevel: "Elige tu nivel",
  locked: "üîí Bloqueado",
  completed: "‚úÖ ¬°Completado!",
  goodAnswers: "respuestas correctas",
  
  chooseOperation: "Elige tu operaci√≥n",
  
  exercise: "Ejercicio",
  validate: "Validar",
  correct: "‚úÖ ¬°Correcto!",
  incorrect: "‚ùå Incorrecto",
  answerWas: "La respuesta era:",
  nextExercise: "Siguiente ejercicio ‚Üí",
  back: "‚Üê Atr√°s",
  
  subscriptionTitle: "Elige tu suscripci√≥n Math4Child",
  subscriptionSubtitle: "Desbloquea todas las funciones y ejercicios ilimitados",
  unlockFeatures: "Desbloquear todas las funciones",
  currentPlan: "Plan actual",
  choosePlan: "Elegir este plan",
  popular: "Popular",
  savings: "ahorra",
  
  free: "Gratis",
  monthly: "Mensual",
  quarterly: "Trimestral",
  yearly: "Anual",
  
  features: {
    adaptiveProgress: "Progreso Adaptativo",
    adaptiveDescription: "5 niveles con validaci√≥n de 100 respuestas correctas por nivel",
    operations: "5 Operaciones",
    operationsDescription: "Suma, resta, multiplicaci√≥n, divisi√≥n y ejercicios mixtos",
    multilingual: "Multiidioma",
    multilingualDescription: "Soporte para 75+ idiomas con adaptaci√≥n cultural",
    multiplatform: "Multiplataforma",
    multiplatformDescription: "Web, Android e iOS con sincronizaci√≥n"
  },
  
  operations: {
    addition: "Suma",
    subtraction: "Resta",
    multiplication: "Multiplicaci√≥n",
    division: "Divisi√≥n",
    mixed: "Mixto",
    additionDesc: "Sumar n√∫meros",
    subtractionDesc: "Restar n√∫meros",
    multiplicationDesc: "Multiplicar n√∫meros",
    divisionDesc: "Dividir n√∫meros",
    mixedDesc: "Ejercicios mixtos"
  },
  
  levels: {
    beginner: "Principiante",
    elementary: "Elemental",
    intermediate: "Intermedio",
    advanced: "Avanzado",
    expert: "Experto"
  },
  
  limitReached: "L√≠mite de preguntas alcanzado",
  limitMessage: "¬°Suscr√≠bete para continuar!"
};

// Traductions allemandes
export const de: Translations = {
  appTitle: "Math4Child",
  appSubtitle: "Mathematik lernen mit Spa√ü",
  backToHome: "‚Üê Zur√ºck zur Startseite",
  backToLevels: "‚Üê Zur√ºck zu den Levels",
  backToOperations: "‚Üê Zur√ºck zu den Operationen",
  
  heroTitle: "Lerne Mathe mit Spa√ü!",
  heroSubtitle: "Willkommen zum mathematischen Abenteuer",
  heroDescription: "Entwickle deine mathematischen F√§higkeiten mit progressiven und unterhaltsamen √úbungen",
  startLearning: "üöÄ Mit dem Lernen beginnen",
  correctAnswers: "Richtige Antworten",
  unlockedLevels: "Freigeschaltete Level",
  questionsRemaining: "Verbleibende Fragen",
  startFree: "üéØ Kostenlos beginnen",
  viewSubscriptions: "üíé Abonnements anzeigen",
  readyToStart: "Bereit f√ºr das Abenteuer?",
  joinThousands: "Schlie√üe dich Tausenden von Kindern an, die Mathe mit Spa√ü lernen",
  
  chooseLevel: "W√§hle dein Level",
  locked: "üîí Gesperrt",
  completed: "‚úÖ Abgeschlossen!",
  goodAnswers: "richtige Antworten",
  
  chooseOperation: "W√§hle deine Operation",
  
  exercise: "√úbung",
  validate: "Best√§tigen",
  correct: "‚úÖ Richtig!",
  incorrect: "‚ùå Falsch",
  answerWas: "Die Antwort war:",
  nextExercise: "N√§chste √úbung ‚Üí",
  back: "‚Üê Zur√ºck",
  
  subscriptionTitle: "W√§hle dein Math4Child-Abonnement",
  subscriptionSubtitle: "Schalte alle Funktionen und unbegrenzte √úbungen frei",
  unlockFeatures: "Alle Funktionen freischalten",
  currentPlan: "Aktueller Plan",
  choosePlan: "Diesen Plan w√§hlen",
  popular: "Beliebt",
  savings: "sparen",
  
  free: "Kostenlos",
  monthly: "Monatlich",
  quarterly: "Viertelj√§hrlich",
  yearly: "J√§hrlich",
  
  features: {
    adaptiveProgress: "Adaptiver Fortschritt",
    adaptiveDescription: "5 Level mit Validierung von 100 richtigen Antworten pro Level",
    operations: "5 Operationen",
    operationsDescription: "Addition, Subtraktion, Multiplikation, Division und gemischte √úbungen",
    multilingual: "Mehrsprachig",
    multilingualDescription: "Unterst√ºtzung f√ºr 75+ Sprachen mit kultureller Anpassung",
    multiplatform: "Multiplattform",
    multiplatformDescription: "Web, Android und iOS mit Synchronisation"
  },
  
  operations: {
    addition: "Addition",
    subtraction: "Subtraktion",
    multiplication: "Multiplikation",
    division: "Division",
    mixed: "Gemischt",
    additionDesc: "Zahlen addieren",
    subtractionDesc: "Zahlen subtrahieren",
    multiplicationDesc: "Zahlen multiplizieren",
    divisionDesc: "Zahlen dividieren",
    mixedDesc: "Gemischte √úbungen"
  },
  
  levels: {
    beginner: "Anf√§nger",
    elementary: "Grundstufe",
    intermediate: "Mittelstufe",
    advanced: "Fortgeschritten",
    expert: "Experte"
  },
  
  limitReached: "Fragenlimit erreicht",
  limitMessage: "Abonniere, um fortzufahren!"
};

// Traductions arabes
export const ar: Translations = {
  appTitle: "Math4Child",
  appSubtitle: "ÿ™ÿπŸÑŸÖ ÿßŸÑÿ±Ÿäÿßÿ∂Ÿäÿßÿ™ ÿ®ŸÖÿ™ÿπÿ©",
  backToHome: "‚Üê ÿßŸÑÿπŸàÿØÿ© ŸÑŸÑÿ±ÿ¶Ÿäÿ≥Ÿäÿ©",
  backToLevels: "‚Üê ÿßŸÑÿπŸàÿØÿ© ŸÑŸÑŸÖÿ≥ÿ™ŸàŸäÿßÿ™",
  backToOperations: "‚Üê ÿßŸÑÿπŸàÿØÿ© ŸÑŸÑÿπŸÖŸÑŸäÿßÿ™",
  
  heroTitle: "ÿ™ÿπŸÑŸÖ ÿßŸÑÿ±Ÿäÿßÿ∂Ÿäÿßÿ™ ÿ®ŸÖÿ™ÿπÿ©!",
  heroSubtitle: "ŸÖÿ±ÿ≠ÿ®ÿßŸã ÿ®ŸÉ ŸÅŸä ÿßŸÑŸÖÿ∫ÿßŸÖÿ±ÿ© ÿßŸÑÿ±Ÿäÿßÿ∂Ÿäÿ©",
  heroDescription: "ÿ∑Ÿàÿ± ŸÖŸáÿßÿ±ÿßÿ™ŸÉ ÿßŸÑÿ±Ÿäÿßÿ∂Ÿäÿ© ŸÖÿπ ÿ™ŸÖÿßÿ±ŸäŸÜ ŸÖÿ™ÿØÿ±ÿ¨ÿ© ŸàŸÖŸÖÿ™ÿπÿ©",
  startLearning: "üöÄ ÿßÿ®ÿØÿ£ ÿßŸÑÿ™ÿπŸÑŸÖ",
  correctAnswers: "ÿßŸÑÿ•ÿ¨ÿßÿ®ÿßÿ™ ÿßŸÑÿµÿ≠Ÿäÿ≠ÿ©",
  unlockedLevels: "ÿßŸÑŸÖÿ≥ÿ™ŸàŸäÿßÿ™ ÿßŸÑŸÖŸÅÿ™Ÿàÿ≠ÿ©",
  questionsRemaining: "ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ© ÿßŸÑŸÖÿ™ÿ®ŸÇŸäÿ©",
  startFree: "üéØ ÿßÿ®ÿØÿ£ ŸÖÿ¨ÿßŸÜÿßŸã",
  viewSubscriptions: "üíé ÿπÿ±ÿ∂ ÿßŸÑÿßÿ¥ÿ™ÿ±ÿßŸÉÿßÿ™",
  readyToStart: "ŸÖÿ≥ÿ™ÿπÿØ ŸÑÿ®ÿØÿ° ÿßŸÑŸÖÿ∫ÿßŸÖÿ±ÿ©ÿü",
  joinThousands: "ÿßŸÜÿ∂ŸÖ ŸÑÿ¢ŸÑÿßŸÅ ÿßŸÑÿ£ÿ∑ŸÅÿßŸÑ ÿßŸÑÿ∞ŸäŸÜ Ÿäÿ™ÿπŸÑŸÖŸàŸÜ ÿßŸÑÿ±Ÿäÿßÿ∂Ÿäÿßÿ™ ÿ®ŸÖÿ™ÿπÿ©",
  
  chooseLevel: "ÿßÿÆÿ™ÿ± ŸÖÿ≥ÿ™ŸàÿßŸÉ",
  locked: "üîí ŸÖÿ∫ŸÑŸÇ",
  completed: "‚úÖ ŸÖŸÉÿ™ŸÖŸÑ!",
  goodAnswers: "ÿ•ÿ¨ÿßÿ®ÿßÿ™ ÿµÿ≠Ÿäÿ≠ÿ©",
  
  chooseOperation: "ÿßÿÆÿ™ÿ± ÿπŸÖŸÑŸäÿ™ŸÉ",
  
  exercise: "ÿ™ŸÖÿ±ŸäŸÜ",
  validate: "ÿ™ÿ£ŸÉŸäÿØ",
  correct: "‚úÖ ÿµÿ≠Ÿäÿ≠!",
  incorrect: "‚ùå ÿÆÿ∑ÿ£",
  answerWas: "ÿßŸÑÿ•ÿ¨ÿßÿ®ÿ© ŸÉÿßŸÜÿ™:",
  nextExercise: "ÿßŸÑÿ™ŸÖÿ±ŸäŸÜ ÿßŸÑÿ™ÿßŸÑŸä ‚Üê",
  back: "‚Üê ÿ±ÿ¨Ÿàÿπ",
  
  subscriptionTitle: "ÿßÿÆÿ™ÿ± ÿßÿ¥ÿ™ÿ±ÿßŸÉ Math4Child",
  subscriptionSubtitle: "ÿßŸÅÿ™ÿ≠ ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖŸäÿ≤ÿßÿ™ ŸàÿßŸÑÿ™ŸÖÿßÿ±ŸäŸÜ ÿßŸÑŸÑÿßŸÖÿ≠ÿØŸàÿØÿ©",
  unlockFeatures: "ŸÅÿ™ÿ≠ ÿ¨ŸÖŸäÿπ ÿßŸÑŸÖŸäÿ≤ÿßÿ™",
  currentPlan: "ÿßŸÑÿÆÿ∑ÿ© ÿßŸÑÿ≠ÿßŸÑŸäÿ©",
  choosePlan: "ÿßÿÆÿ™ÿ± Ÿáÿ∞Ÿá ÿßŸÑÿÆÿ∑ÿ©",
  popular: "ÿ¥ÿßÿ¶ÿπ",
  savings: "ŸàŸÅÿ±",
  
  free: "ŸÖÿ¨ÿßŸÜŸä",
  monthly: "ÿ¥Ÿáÿ±Ÿä",
  quarterly: "ÿ±ÿ®ÿπ ÿ≥ŸÜŸàŸä",
  yearly: "ÿ≥ŸÜŸàŸä",
  
  features: {
    adaptiveProgress: "ÿ™ŸÇÿØŸÖ ÿ™ŸÉŸäŸÅŸä",
    adaptiveDescription: "5 ŸÖÿ≥ÿ™ŸàŸäÿßÿ™ ŸÖÿπ ÿ™ÿ£ŸÉŸäÿØ 100 ÿ•ÿ¨ÿßÿ®ÿ© ÿµÿ≠Ÿäÿ≠ÿ© ŸÑŸÉŸÑ ŸÖÿ≥ÿ™ŸàŸâ",
    operations: "5 ÿπŸÖŸÑŸäÿßÿ™",
    operationsDescription: "ÿßŸÑÿ¨ŸÖÿπ ŸàÿßŸÑÿ∑ÿ±ÿ≠ ŸàÿßŸÑÿ∂ÿ±ÿ® ŸàÿßŸÑŸÇÿ≥ŸÖÿ© ŸàÿßŸÑÿ™ŸÖÿßÿ±ŸäŸÜ ÿßŸÑŸÖÿÆÿ™ŸÑÿ∑ÿ©",
    multilingual: "ŸÖÿ™ÿπÿØÿØ ÿßŸÑŸÑÿ∫ÿßÿ™",
    multilingualDescription: "ÿØÿπŸÖ ÿ£ŸÉÿ´ÿ± ŸÖŸÜ 75 ŸÑÿ∫ÿ© ŸÖÿπ ÿßŸÑÿ™ŸÉŸäŸÅ ÿßŸÑÿ´ŸÇÿßŸÅŸä",
    multiplatform: "ŸÖÿ™ÿπÿØÿØ ÿßŸÑŸÖŸÜÿµÿßÿ™",
    multiplatformDescription: "ŸàŸäÿ® Ÿàÿ£ŸÜÿØÿ±ŸàŸäÿØ Ÿàÿ¢Ÿä ÿ£Ÿà ÿ•ÿ≥ ŸÖÿπ ÿßŸÑŸÖÿ≤ÿßŸÖŸÜÿ©"
  },
  
  operations: {
    addition: "ÿßŸÑÿ¨ŸÖÿπ",
    subtraction: "ÿßŸÑÿ∑ÿ±ÿ≠",
    multiplication: "ÿßŸÑÿ∂ÿ±ÿ®",
    division: "ÿßŸÑŸÇÿ≥ŸÖÿ©",
    mixed: "ŸÖÿÆÿ™ŸÑÿ∑",
    additionDesc: "ÿ¨ŸÖÿπ ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ",
    subtractionDesc: "ÿ∑ÿ±ÿ≠ ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ",
    multiplicationDesc: "ÿ∂ÿ±ÿ® ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ",
    divisionDesc: "ŸÇÿ≥ŸÖÿ© ÿßŸÑÿ£ÿ±ŸÇÿßŸÖ",
    mixedDesc: "ÿ™ŸÖÿßÿ±ŸäŸÜ ŸÖÿÆÿ™ŸÑÿ∑ÿ©"
  },
  
  levels: {
    beginner: "ŸÖÿ®ÿ™ÿØÿ¶",
    elementary: "ÿßÿ®ÿ™ÿØÿßÿ¶Ÿä",
    intermediate: "ŸÖÿ™Ÿàÿ≥ÿ∑",
    advanced: "ŸÖÿ™ŸÇÿØŸÖ",
    expert: "ÿÆÿ®Ÿäÿ±"
  },
  
  limitReached: "ÿ™ŸÖ ÿßŸÑŸàÿµŸàŸÑ ŸÑÿ≠ÿØ ÿßŸÑÿ£ÿ≥ÿ¶ŸÑÿ©",
  limitMessage: "ÿßÿ¥ÿ™ÿ±ŸÉ ŸÑŸÑŸÖÿ™ÿßÿ®ÿπÿ©!"
};

// Traductions chinoises
export const zh: Translations = {
  appTitle: "Math4Child",
  appSubtitle: "Âø´‰πêÂ≠¶Êï∞Â≠¶",
  backToHome: "‚Üê ËøîÂõûÈ¶ñÈ°µ",
  backToLevels: "‚Üê ËøîÂõûÁ∫ßÂà´",
  backToOperations: "‚Üê ËøîÂõûËøêÁÆó",
  
  heroTitle: "Âø´‰πêÂ≠¶Êï∞Â≠¶ÔºÅ",
  heroSubtitle: "Ê¨¢ËøéÊù•Âà∞Êï∞Â≠¶ÂÜíÈô©",
  heroDescription: "ÈÄöËøáÂæ™Â∫èÊ∏êËøõ‰∏îÊúâË∂£ÁöÑÁªÉ‰π†Êù•ÊèêÈ´ò‰Ω†ÁöÑÊï∞Â≠¶ÊäÄËÉΩ",
  startLearning: "üöÄ ÂºÄÂßãÂ≠¶‰π†",
  correctAnswers: "Ê≠£Á°ÆÁ≠îÊ°à",
  unlockedLevels: "Â∑≤Ëß£ÈîÅÁ∫ßÂà´",
  questionsRemaining: "Ââ©‰ΩôÈ¢òÁõÆ",
  startFree: "üéØ ÂÖçË¥πÂºÄÂßã",
  viewSubscriptions: "üíé Êü•ÁúãËÆ¢ÈòÖ",
  readyToStart: "ÂáÜÂ§áÂºÄÂßãÂÜíÈô©‰∫ÜÂêóÔºü",
  joinThousands: "Âä†ÂÖ•ÊàêÂçÉ‰∏ä‰∏áÂø´‰πêÂ≠¶Êï∞Â≠¶ÁöÑÂ≠©Â≠ê‰ª¨",
  
  chooseLevel: "ÈÄâÊã©‰Ω†ÁöÑÁ∫ßÂà´",
  locked: "üîí Â∑≤ÈîÅÂÆö",
  completed: "‚úÖ Â∑≤ÂÆåÊàêÔºÅ",
  goodAnswers: "Ê≠£Á°ÆÁ≠îÊ°à",
  
  chooseOperation: "ÈÄâÊã©‰Ω†ÁöÑËøêÁÆó",
  
  exercise: "ÁªÉ‰π†",
  validate: "Á°ÆËÆ§",
  correct: "‚úÖ Ê≠£Á°ÆÔºÅ",
  incorrect: "‚ùå ÈîôËØØ",
  answerWas: "Á≠îÊ°àÊòØÔºö",
  nextExercise: "‰∏ã‰∏ÄÈ¢ò ‚Üí",
  back: "‚Üê ËøîÂõû",
  
  subscriptionTitle: "ÈÄâÊã©‰Ω†ÁöÑMath4ChildËÆ¢ÈòÖ",
  subscriptionSubtitle: "Ëß£ÈîÅÊâÄÊúâÂäüËÉΩÂíåÊó†ÈôêÁªÉ‰π†",
  unlockFeatures: "Ëß£ÈîÅÊâÄÊúâÂäüËÉΩ",
  currentPlan: "ÂΩìÂâçËÆ°Âàí",
  choosePlan: "ÈÄâÊã©Ê≠§ËÆ°Âàí",
  popular: "ÁÉ≠Èó®",
  savings: "ËäÇÁúÅ",
  
  free: "ÂÖçË¥π",
  monthly: "ÊúàÂ∫¶",
  quarterly: "Â≠£Â∫¶",
  yearly: "Âπ¥Â∫¶",
  
  features: {
    adaptiveProgress: "Ëá™ÈÄÇÂ∫îËøõÊ≠•",
    adaptiveDescription: "5‰∏™Á∫ßÂà´ÔºåÊØèÁ∫ßÈúÄË¶Å100‰∏™Ê≠£Á°ÆÁ≠îÊ°àÈ™åËØÅ",
    operations: "5ÁßçËøêÁÆó",
    operationsDescription: "Âä†Ê≥ï„ÄÅÂáèÊ≥ï„ÄÅ‰πòÊ≥ï„ÄÅÈô§Ê≥ïÂíåÊ∑∑ÂêàÁªÉ‰π†",
    multilingual: "Â§öËØ≠Ë®Ä",
    multilingualDescription: "ÊîØÊåÅ75+ÁßçËØ≠Ë®ÄÔºåÂÖ∑ÊúâÊñáÂåñÈÄÇÂ∫îÊÄß",
    multiplatform: "Â§öÂπ≥Âè∞",
    multiplatformDescription: "ÁΩëÈ°µ„ÄÅÂÆâÂçìÂíåiOSÂêåÊ≠•"
  },
  
  operations: {
    addition: "Âä†Ê≥ï",
    subtraction: "ÂáèÊ≥ï",
    multiplication: "‰πòÊ≥ï",
    division: "Èô§Ê≥ï",
    mixed: "Ê∑∑Âêà",
    additionDesc: "Êï∞Â≠óÁõ∏Âä†",
    subtractionDesc: "Êï∞Â≠óÁõ∏Âáè",
    multiplicationDesc: "Êï∞Â≠óÁõ∏‰πò",
    divisionDesc: "Êï∞Â≠óÁõ∏Èô§",
    mixedDesc: "Ê∑∑ÂêàÁªÉ‰π†"
  },
  
  levels: {
    beginner: "ÂàùÂ≠¶ËÄÖ",
    elementary: "ÂàùÁ∫ß",
    intermediate: "‰∏≠Á∫ß",
    advanced: "È´òÁ∫ß",
    expert: "‰∏ìÂÆ∂"
  },
  
  limitReached: "È¢òÁõÆÈôêÂà∂Â∑≤ËææÂà∞",
  limitMessage: "ËÆ¢ÈòÖ‰ª•ÁªßÁª≠ÔºÅ"
};

// Export de toutes les traductions
export const translations = {
  fr,
  en,
  es,
  de,
  ar,
  zh
};

// Hook pour utiliser les traductions
export const useTranslations = (language: string): Translations => {
  return translations[language as keyof typeof translations] || translations.fr;
};
EOF

log_success "‚úÖ Fichier de traductions corrig√©"

# =============================================================================
# 3. RED√âMARRAGE DU SERVEUR
# =============================================================================

log_info "üîÑ Red√©marrage du serveur..."

# Arr√™ter le serveur existant
pkill -f "next dev" 2>/dev/null || true
sleep 3

# Supprimer le cache
rm -rf .next

# Red√©marrer
npm run dev > /dev/null 2>&1 &
sleep 5

# V√©rification que le serveur fonctionne
if pgrep -f "next dev" > /dev/null; then
    log_success "‚úÖ Serveur de d√©veloppement red√©marr√©"
else
    log_error "‚ö†Ô∏è Le serveur n'a pas pu red√©marrer automatiquement"
    echo "   D√©marrez-le manuellement avec: npm run dev"
fi

# =============================================================================
# RAPPORT FINAL
# =============================================================================

echo ""
print_header "CORRECTION TERMIN√âE"
echo ""
echo "‚úÖ Probl√®mes r√©solus :"
echo ""
echo "üîß Plans d'abonnements restaur√©s :"
echo "   üí∞ Plan Gratuit (0‚Ç¨)"
echo "   üìÖ Plan Mensuel (9,99‚Ç¨) [Populaire]"
echo "   üü† Plan Trimestriel (26,97‚Ç¨) [-10% üí∞]"
echo "   üíö Plan Annuel (83,93‚Ç¨) [-30% üî•]"
echo ""
echo "üåç Traductions compl√®tes :"
echo "   üá´üá∑ Fran√ßais"
echo "   üá∫üá∏ Anglais"
echo "   üá™üá∏ Espagnol"
echo "   üá©üá™ Allemand"
echo "   üá∏üá¶ Arabe (RTL)"
echo "   üá®üá≥ Chinois"
echo ""
echo "‚úÖ Fonctionnalit√©s pr√©serv√©es :"
echo "   üéØ Dropdown de langues fonctionnel"
echo "   üîÑ Changement de langue instantan√©"
echo "   üé® Design orange du plan trimestriel"
echo "   üì± Interface responsive"
echo ""
echo "üåê Testez maintenant :"
echo "   http://localhost:3000"
echo "   ‚Üí Changez de langue ‚Üí Tous les plans apparaissent"
echo "   ‚Üí Cliquez sur 'Voir les abonnements' ‚Üí 4 plans visibles"
echo ""
echo "üìÅ Sauvegarde disponible :"
echo "   src/app/page.tsx.backup_fix_plans_$(date +%Y%m%d_%H%M%S)"
echo ""
log_success "üéâ Tous les plans d'abonnements sont de nouveau visibles!"
echo "======================================"