#!/bin/bash

# =============================================================================
# SCRIPT DE DEBUG BUILD - Math4Child
# =============================================================================

echo "üîç DIAGNOSTIC DU PROBL√àME DE BUILD NETLIFY"
echo "==========================================="

# Naviguer vers le bon r√©pertoire
if [ -d "apps/math4child" ]; then
    cd apps/math4child
    echo "‚úÖ Dans le r√©pertoire: $(pwd)"
else
    echo "‚ùå Impossible de trouver apps/math4child"
    exit 1
fi

echo ""
echo "üìã V√âRIFICATION DE LA CONFIGURATION NEXT.JS:"
echo "============================================="

# V√©rifier next.config.js
echo "‚ñ∂ Contenu de next.config.js:"
if [ -f "next.config.js" ]; then
    cat next.config.js
else
    echo "‚ùå next.config.js manquant"
fi

echo ""
echo "üìã V√âRIFICATION DU PACKAGE.JSON:"
echo "================================"

# V√©rifier les scripts package.json
echo "‚ñ∂ Scripts dans package.json:"
if [ -f "package.json" ]; then
    node -e "console.log(JSON.stringify(JSON.parse(require('fs').readFileSync('package.json', 'utf8')).scripts, null, 2))"
else
    echo "‚ùå package.json manquant"
fi

echo ""
echo "üß™ TEST BUILD LOCAL:"
echo "==================="

# Test build local pour voir ce qui est g√©n√©r√©
echo "‚ñ∂ Lancement du build local..."
if npm run build; then
    echo "‚úÖ Build local r√©ussi"
    
    echo ""
    echo "üìÅ ANALYSE DES R√âPERTOIRES G√âN√âR√âS:"
    echo "==================================="
    
    # V√©rifier les r√©pertoires g√©n√©r√©s
    if [ -d ".next" ]; then
        echo "‚úÖ R√©pertoire .next trouv√©"
        echo "   Contenu de .next:"
        ls -la .next/ | head -10
        echo "   Taille: $(du -sh .next 2>/dev/null | cut -f1 || echo 'N/A')"
    else
        echo "‚ùå R√©pertoire .next non trouv√©"
    fi
    
    if [ -d "out" ]; then
        echo "‚úÖ R√©pertoire out trouv√©"
        echo "   Contenu de out:"
        ls -la out/ | head -10
        echo "   Taille: $(du -sh out 2>/dev/null | cut -f1 || echo 'N/A')"
    else
        echo "‚ùå R√©pertoire out non trouv√©"
    fi
    
    if [ -d "dist" ]; then
        echo "‚úÖ R√©pertoire dist trouv√©"
        echo "   Contenu de dist:"
        ls -la dist/ | head -10
    else
        echo "‚ùå R√©pertoire dist non trouv√©"
    fi
    
else
    echo "‚ùå Build local √©chou√©"
    exit 1
fi

echo ""
echo "üìù RECOMMANDATIONS NETLIFY.TOML:"
echo "================================"

# D√©terminer la bonne configuration selon ce qui est g√©n√©r√©
if [ -d "out" ]; then
    echo "‚úÖ Configuration recommand√©e (export statique):"
    cat << 'EOF'
[build]
  base = "apps/math4child"
  publish = "out"
  command = "npm install --legacy-peer-deps --force && npm run build"
EOF
elif [ -d ".next" ]; then
    echo "‚úÖ Configuration recommand√©e (SSR/SSG):"
    cat << 'EOF'
[build]
  base = "apps/math4child"
  publish = ".next"
  command = "npm install --legacy-peer-deps --force && npm run build"
EOF
else
    echo "‚ùå Aucun r√©pertoire de build valide trouv√©"
    echo "üîß Configuration next.config.js sugg√©r√©e pour export statique:"
    cat << 'EOF'
/** @type {import('next').NextConfig} */
const nextConfig = {
  output: 'export',
  trailingSlash: true,
  images: {
    unoptimized: true
  },
  eslint: {
    ignoreDuringBuilds: true,
  },
  typescript: {
    ignoreBuildErrors: true,
  },
}

module.exports = nextConfig
EOF
fi

echo ""
echo "üéØ PROCHAINES √âTAPES:"
echo "===================="
echo "1. Utilisez la configuration netlify.toml recommand√©e ci-dessus"
echo "2. Si aucun r√©pertoire trouv√©, remplacez next.config.js par la config sugg√©r√©e"
echo "3. Testez √† nouveau le build local: npm run build"
echo "4. Commitez et poussez les changements"