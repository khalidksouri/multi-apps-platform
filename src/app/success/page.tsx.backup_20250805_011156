'use client'

import { Suspense } from 'react'

// Composant qui utilise useSearchParams
function SuccessContent() {
  const searchParams = new URLSearchParams(typeof window !== 'undefined' ? window.location.search : '')
  const sessionId = searchParams.get('session_id')

  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-blue-50 flex items-center justify-center p-4">
      <div className="max-w-md w-full bg-white rounded-2xl shadow-xl p-8 text-center">
        <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-6">
          <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M5 13l4 4L19 7" />
          </svg>
        </div>
        
        <h1 className="text-2xl font-bold text-gray-900 mb-4">
          ðŸŽ‰ Paiement RÃ©ussi !
        </h1>
        
        <p className="text-gray-600 mb-6">
          FÃ©licitations ! Votre abonnement Math4Child a Ã©tÃ© activÃ© avec succÃ¨s.
        </p>
        
        {sessionId && (
          <div className="bg-gray-50 rounded-lg p-4 mb-6">
            <p className="text-sm text-gray-500">ID de session</p>
            <p className="text-xs text-gray-700 font-mono break-all">{sessionId}</p>
          </div>
        )}
        
        <div className="space-y-4">
          <button
            onClick={() => window.location.href = '/'}
            className="w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white font-bold py-3 px-6 rounded-xl hover:from-blue-600 hover:to-purple-700 transition-all duration-200"
          >
            Commencer l'Aventure Math4Child
          </button>
          
          <p className="text-xs text-gray-500">
            DÃ©veloppÃ© par GOTEST (SIRET: 53958712100028)<br/>
            ðŸ“§ gotesttech@gmail.com
          </p>
        </div>
      </div>
    </div>
  )
}

// Composant de fallback pendant le chargement
function LoadingSuccess() {
  return (
    <div className="min-h-screen bg-gradient-to-br from-green-50 to-blue-50 flex items-center justify-center p-4">
      <div className="max-w-md w-full bg-white rounded-2xl shadow-xl p-8 text-center">
        <div className="w-16 h-16 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-6 animate-pulse">
          <svg className="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
          </svg>
        </div>
        
        <h1 className="text-2xl font-bold text-gray-900 mb-4">
          Chargement...
        </h1>
        
        <p className="text-gray-600 mb-6">
          VÃ©rification de votre paiement en cours...
        </p>
        
        <div className="animate-pulse bg-gray-200 h-4 rounded mb-6"></div>
        
        <div className="space-y-4">
          <div className="animate-pulse bg-gray-200 h-12 rounded-xl"></div>
          
          <p className="text-xs text-gray-500">
            DÃ©veloppÃ© par GOTEST (SIRET: 53958712100028)<br/>
            ðŸ“§ gotesttech@gmail.com
          </p>
        </div>
      </div>
    </div>
  )
}

// Composant principal avec Suspense boundary
export default function SuccessPage() {
  return (
    <Suspense fallback={<LoadingSuccess />}>
      <SuccessContent />
    </Suspense>
  )
}
