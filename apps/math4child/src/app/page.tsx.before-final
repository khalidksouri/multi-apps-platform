'use client';

import { useState, useEffect } from 'react';
import { UNIVERSAL_LANGUAGES, type Language } from '@/lib/i18n/languages';

// Fonction stricte pour obtenir le premier language
const getFirstLanguage = (): Language => {
  const firstLang = UNIVERSAL_LANGUAGES[0];
  if (!firstLang) {
    throw new Error('UNIVERSAL_LANGUAGES ne peut pas être vide');
  }
  return firstLang;
};

// Fonction pour détecter la langue du navigateur
function detectBrowserLanguage(): string {
  if (typeof window === 'undefined') return 'fr';
  
  const browserLang = navigator.language;
  if (!browserLang) return 'fr';
  
  const langParts = browserLang.split('-');
  const mainLang = langParts[0];
  if (!mainLang) return 'fr';
  
  const supportedLang = UNIVERSAL_LANGUAGES.find(
    lang => lang.code === browserLang || lang.code.startsWith(mainLang)
  );
  
  return supportedLang?.code || 'fr';
}

// Fonction pour obtenir une langue par code avec fallback
function getLanguageByCodeSafe(code: string): Language {
  const found = UNIVERSAL_LANGUAGES.find(lang => lang.code === code);
  return found || getFirstLanguage();
}

export default function HomePage() {
  // useState avec fonction d'initialisation STRICTE
  const [selectedLanguage, setSelectedLanguage] = useState<Language>(() => getFirstLanguage());
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);

  useEffect(() => {
    const browserLang = detectBrowserLanguage();
    setSelectedLanguage(getLanguageByCodeSafe(browserLang));
  }, []);

  const handleLanguageChange = (languageCode: string) => {
    const newLanguage = getLanguageByCodeSafe(languageCode);
    setSelectedLanguage(newLanguage);
    setIsDropdownOpen(false);
    
    // Appliquer la direction RTL si nécessaire
    document.documentElement.dir = newLanguage.rtl ? 'rtl' : 'ltr';
    document.documentElement.lang = newLanguage.code;
  };

  // Textes traduits avec toutes les langues
  const getTexts = (langCode: string) => {
    const defaultTexts = {
      title: 'Math4Child',
      subtitle: 'Application éducative pour apprendre les maths',
      description: 'L\'application n°1 pour apprendre les mathématiques en famille !',
      startFree: 'Commencer gratuitement',
      selectLanguage: 'Choisir la langue',
      selectedLanguage: 'Langue sélectionnée',
      language: 'Langue',
      continent: 'Continent',
      currency: 'Devise',
      rtlEnabled: 'Support RTL activé pour cette langue',
      palestineInfo: 'Palestine ajoutée au Moyen-Orient avec support complet',
      moroccoInfo: 'Maroc en Afrique avec drapeau marocain maintenu'
    };

    const textsMap: Record<string, typeof defaultTexts> = {
      'fr': defaultTexts,
      'en': {
        title: 'Math4Child',
        subtitle: 'Educational app to learn math',
        description: 'The #1 app to learn mathematics as a family!',
        startFree: 'Start for free',
        selectLanguage: 'Select language',
        selectedLanguage: 'Selected language',
        language: 'Language',
        continent: 'Continent',
        currency: 'Currency',
        rtlEnabled: 'RTL support enabled for this language',
        palestineInfo: 'Palestine added to Middle East with full support',
        moroccoInfo: 'Morocco in Africa with Moroccan flag maintained'
      },
      'de': {
        title: 'Math4Child',
        subtitle: 'Lern-App für Mathematik',
        description: 'Die #1 App zum Mathe lernen als Familie!',
        startFree: 'Kostenlos starten',
        selectLanguage: 'Sprache auswählen',
        selectedLanguage: 'Ausgewählte Sprache',
        language: 'Sprache',
        continent: 'Kontinent',
        currency: 'Währung',
        rtlEnabled: 'RTL-Unterstützung für diese Sprache aktiviert',
        palestineInfo: 'Palästina zum Nahen Osten mit vollständiger Unterstützung hinzugefügt',
        moroccoInfo: 'Marokko in Afrika mit marokkanischer Flagge beibehalten'
      },
      'es': {
        title: 'Math4Child',
        subtitle: 'Aplicación educativa para aprender matemáticas',
        description: '¡La aplicación #1 para aprender matemáticas en familia!',
        startFree: 'Empezar gratis',
        selectLanguage: 'Seleccionar idioma',
        selectedLanguage: 'Idioma seleccionado',
        language: 'Idioma',
        continent: 'Continente',
        currency: 'Moneda',
        rtlEnabled: 'Soporte RTL habilitado para este idioma',
        palestineInfo: 'Palestina añadida a Oriente Medio con soporte completo',
        moroccoInfo: 'Marruecos en África con bandera marroquí mantenida'
      },
      'ar-PS': {
        title: 'Math4Child',
        subtitle: 'تطبيق تعليمي لتعلم الرياضيات',
        description: 'التطبيق رقم 1 لتعليم الرياضيات للعائلة في فلسطين!',
        startFree: 'ابدأ مجاناً',
        selectLanguage: 'اختر اللغة',
        selectedLanguage: 'اللغة المختارة',
        language: 'اللغة',
        continent: 'القارة',
        currency: 'العملة',
        rtlEnabled: 'دعم الكتابة من اليمين إلى اليسار مُفعل',
        palestineInfo: 'فلسطين مضافة للشرق الأوسط مع دعم كامل',
        moroccoInfo: 'المغرب في أفريقيا مع الحفاظ على العلم المغربي'
      },
      'ar-MA': {
        title: 'Math4Child',
        subtitle: 'تطبيق تعليمي لتعلم الرياضيات',
        description: 'التطبيق رقم 1 لتعليم الرياضيات للعائلة في المغرب!',
        startFree: 'ابدأ مجاناً',
        selectLanguage: 'اختر اللغة',
        selectedLanguage: 'اللغة المختارة',
        language: 'اللغة',
        continent: 'القارة',
        currency: 'العملة',
        rtlEnabled: 'دعم الكتابة من اليمين إلى اليسار مُفعل',
        palestineInfo: 'فلسطين مضافة للشرق الأوسط مع دعم كامل',
        moroccoInfo: 'المغرب في أفريقيا مع الحفاظ على العلم المغربي'
      }
    };
    
    return textsMap[langCode] ?? defaultTexts;
  };

  const currentTexts = getTexts(selectedLanguage.code);

  return (
    <div className={`min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 ${selectedLanguage.rtl ? 'rtl' : 'ltr'}`}>
      <div className="container mx-auto px-4 py-8">
        {/* Header avec sélecteur de langue */}
        <header className="flex justify-between items-center mb-12">
          <h1 className="text-3xl font-bold text-indigo-900">{currentTexts.title}</h1>
          
          {/* Sélecteur de langue */}
          <div className="relative">
            <button
              onClick={() => setIsDropdownOpen(!isDropdownOpen)}
              className="flex items-center space-x-2 px-4 py-2 bg-white border border-gray-300 rounded-lg shadow-sm hover:bg-gray-50 focus:ring-2 focus:ring-indigo-500"
              data-testid="language-selector"
            >
              <span className="text-xl">{selectedLanguage.flag}</span>
              <span className="font-medium">{selectedLanguage.name}</span>
              <svg className="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 9l-7 7-7-7" />
              </svg>
            </button>
            
            {isDropdownOpen && (
              <div 
                className="absolute right-0 mt-2 w-80 bg-white border border-gray-200 rounded-lg shadow-lg max-h-96 overflow-y-auto z-50"
                data-testid="language-dropdown"
              >
                {/* Groupement par continent */}
                {['Europe', 'Asia', 'Africa', 'North America', 'South America', 'Oceania'].map(continent => {
                  const continentLanguages = UNIVERSAL_LANGUAGES.filter(lang => lang.continent === continent);
                  
                  if (continentLanguages.length === 0) return null;
                  
                  return (
                    <div key={continent} className="border-b border-gray-100 last:border-b-0">
                      <div className="px-3 py-2 bg-gray-50 border-b border-gray-100">
                        <h3 className="text-xs font-semibold text-gray-600 uppercase tracking-wide">
                          {continent === 'Asia' ? 'Asie & Moyen-Orient' : continent}
                        </h3>
                      </div>
                      
                      <div className="py-1">
                        {continentLanguages.map((language) => (
                          <button
                            key={language.code}
                            onClick={() => handleLanguageChange(language.code)}
                            className={`w-full px-4 py-3 text-left hover:bg-gray-50 flex items-center space-x-3 ${
                              selectedLanguage.code === language.code ? 'bg-indigo-50 text-indigo-600' : 'text-gray-700'
                            }`}
                            data-testid={`language-option-${language.code}`}
                          >
                            <span className="text-2xl">{language.flag}</span>
                            <div className="flex-1">
                              <div className="font-medium">{language.name}</div>
                              <div className="text-sm text-gray-500">{language.nativeName}</div>
                              <div className="text-xs text-gray-400">{language.continent} • {language.currency}</div>
                            </div>
                            {selectedLanguage.code === language.code && (
                              <div className="text-indigo-600">✓</div>
                            )}
                          </button>
                        ))}
                      </div>
                    </div>
                  );
                })}
              </div>
            )}
          </div>
        </header>

        {/* Contenu principal */}
        <main className="text-center">
          <div className="max-w-4xl mx-auto">
            <h2 className="text-5xl font-bold text-gray-900 mb-6">
              {currentTexts.subtitle}
            </h2>
            
            <p className="text-xl text-gray-600 mb-8 max-w-2xl mx-auto">
              {currentTexts.description}
            </p>
            
            <button className="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-4 px-8 rounded-lg text-lg transition-colors duration-200">
              {currentTexts.startFree}
            </button>
            
            {/* Section d'informations sur la langue sélectionnée - RESTAURÉE */}
            <div className="mt-12 p-6 bg-white rounded-lg shadow-sm">
              <h3 className="text-lg font-semibold mb-4">
                {currentTexts.selectedLanguage}
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                <div>
                  <span className="font-medium">{currentTexts.language}:</span> {selectedLanguage.name}
                </div>
                <div>
                  <span className="font-medium">{currentTexts.continent}:</span> {selectedLanguage.continent}
                </div>
                <div>
                  <span className="font-medium">{currentTexts.currency}:</span> {selectedLanguage.currency}
                </div>
              </div>
              
              {/* Support RTL */}
              {selectedLanguage.rtl && (
                <div className="mt-2 text-sm text-indigo-600">
                  ✨ {currentTexts.rtlEnabled}
                </div>
              )}
              
              {/* Informations spéciales pour Palestine et Maroc - RESTAURÉES */}
              {selectedLanguage.code === 'ar-PS' && (
                <div className="mt-2 text-sm text-green-600">
                  🇵🇸 {currentTexts.palestineInfo}
                </div>
              )}
              {selectedLanguage.code === 'ar-MA' && (
                <div className="mt-2 text-sm text-green-600">
                  🇲🇦 {currentTexts.moroccoInfo}
                </div>
              )}
            </div>

            {/* Section statistiques - AJOUTÉE */}
            <div className="mt-12 grid grid-cols-1 md:grid-cols-3 gap-8">
              <div className="text-center p-6 bg-white rounded-lg shadow-sm">
                <div className="text-4xl font-bold text-indigo-600 mb-2">100k+</div>
                <div className="text-gray-600">familles satisfaites</div>
              </div>
              <div className="text-center p-6 bg-white rounded-lg shadow-sm">
                <div className="text-4xl font-bold text-indigo-600 mb-2">98%</div>
                <div className="text-gray-600">de satisfaction</div>
              </div>
              <div className="text-center p-6 bg-white rounded-lg shadow-sm">
                <div className="text-4xl font-bold text-indigo-600 mb-2">{UNIVERSAL_LANGUAGES.length}</div>
                <div className="text-gray-600">langues disponibles</div>
              </div>
            </div>

            {/* Section features - AJOUTÉE */}
            <div className="mt-16">
              <h3 className="text-3xl font-bold text-gray-900 mb-12">
                Pourquoi choisir Math4Child ?
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                <div className="p-6 bg-white rounded-lg shadow-sm">
                  <div className="text-4xl mb-4">🎯</div>
                  <h4 className="text-xl font-bold mb-2">Personnalisé</h4>
                  <p className="text-gray-600">Adapté au niveau de chaque enfant</p>
                </div>
                <div className="p-6 bg-white rounded-lg shadow-sm">
                  <div className="text-4xl mb-4">🌍</div>
                  <h4 className="text-xl font-bold mb-2">Multilingue</h4>
                  <p className="text-gray-600">{UNIVERSAL_LANGUAGES.length} langues disponibles</p>
                </div>
                <div className="p-6 bg-white rounded-lg shadow-sm">
                  <div className="text-4xl mb-4">👨‍👩‍👧‍👦</div>
                  <h4 className="text-xl font-bold mb-2">En famille</h4>
                  <p className="text-gray-600">Suivi des progrès pour les parents</p>
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </div>
  );
}
