name: Math4Child Specialized Tests

on:
  workflow_dispatch:  # Manuel uniquement
  schedule:
    - cron: '0 2 * * 1'  # Lundi à 2h (hebdomadaire)

jobs:
  # Tests complets (manuel)
  full-tests:
    name: 🔍 Full Test Suite
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: apps/math4child/package-lock.json
          
      - name: Install app dependencies
        run: |
          cd apps/math4child
          npm ci
          
      - name: Install and setup tests
        run: |
          if [ ! -d "tests" ]; then
            echo "📝 Creating basic test structure..."
            mkdir -p tests/specs
            # Créer package.json minimal pour tests
            cat > tests/package.json << 'TESTEOF'
{
  "name": "math4child-tests",
  "private": true,
  "devDependencies": {
    "@playwright/test": "^1.41.0"
  }
}
TESTEOF
            # Créer test de base
            cat > tests/specs/basic.spec.ts << 'TESTEOF'
import { test, expect } from '@playwright/test';

test('Math4Child loads correctly', async ({ page }) => {
  await page.goto('/');
  await expect(page.locator('h1')).toContainText(/Math4Child/i);
});
TESTEOF
            # Créer config playwright minimal
            cat > tests/playwright.config.ts << 'TESTEOF'
import { defineConfig, devices } from '@playwright/test';

export default defineConfig({
  testDir: './specs',
  use: {
    baseURL: 'http://localhost:3000',
  },
  projects: [
    { name: 'chromium', use: { ...devices['Desktop Chrome'] } },
    { name: 'firefox', use: { ...devices['Desktop Firefox'] } },
    { name: 'webkit', use: { ...devices['Desktop Safari'] } },
  ],
  webServer: {
    command: 'cd ../apps/math4child && npm start',
    url: 'http://localhost:3000',
    reuseExistingServer: !process.env.CI,
  },
});
TESTEOF
          fi
          cd tests
          npm ci
          npx playwright install --with-deps ${{ matrix.browser }}
          
      - name: Build and start app
        run: |
          cd apps/math4child
          npm run build
          npm start &
          sleep 20
          
      - name: Run tests
        run: |
          cd tests
          npx playwright test --project=${{ matrix.browser }}
        env:
          BASE_URL: http://localhost:3000
        continue-on-error: true
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.browser }}
          path: tests/playwright-report/
          retention-days: 30

  # Tests de sécurité
  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: 'apps/math4child'
          format: 'sarif'
          output: 'trivy-results.sarif'
        continue-on-error: true
          
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true
